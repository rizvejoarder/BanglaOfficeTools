{
  "version": 3,
  "sources": ["../../docx-preview/dist/webpack:/docx/webpack/universalModuleDefinition", "../../docx-preview/dist/webpack:/docx/src/mathml.scss", "../../docx-preview/dist/webpack:/docx/node_modules/css-loader/dist/runtime/api.js", "../../docx-preview/dist/webpack:/docx/node_modules/css-loader/dist/runtime/getUrl.js", "../../docx-preview/dist/webpack:/docx/node_modules/css-loader/dist/runtime/sourceMaps.js", "../../docx-preview/dist/webpack:/docx/src/common/open-xml-package.ts", "../../docx-preview/dist/webpack:/docx/src/common/part.ts", "../../docx-preview/dist/webpack:/docx/src/common/relationship.ts", "../../docx-preview/dist/webpack:/docx/src/document-parser.ts", "../../docx-preview/dist/webpack:/docx/src/document-props/core-props-part.ts", "../../docx-preview/dist/webpack:/docx/src/document-props/core-props.ts", "../../docx-preview/dist/webpack:/docx/src/document-props/custom-props-part.ts", "../../docx-preview/dist/webpack:/docx/src/document-props/custom-props.ts", "../../docx-preview/dist/webpack:/docx/src/document-props/extended-props-part.ts", "../../docx-preview/dist/webpack:/docx/src/document-props/extended-props.ts", "../../docx-preview/dist/webpack:/docx/src/document/bookmarks.ts", "../../docx-preview/dist/webpack:/docx/src/document/border.ts", "../../docx-preview/dist/webpack:/docx/src/document/common.ts", "../../docx-preview/dist/webpack:/docx/src/document/document-part.ts", "../../docx-preview/dist/webpack:/docx/src/document/dom.ts", "../../docx-preview/dist/webpack:/docx/src/document/line-spacing.ts", "../../docx-preview/dist/webpack:/docx/src/document/paragraph.ts", "../../docx-preview/dist/webpack:/docx/src/document/run.ts", "../../docx-preview/dist/webpack:/docx/src/document/section.ts", "../../docx-preview/dist/webpack:/docx/src/docx-preview.ts", "../../docx-preview/dist/webpack:/docx/src/font-table/font-table.ts", "../../docx-preview/dist/webpack:/docx/src/font-table/fonts.ts", "../../docx-preview/dist/webpack:/docx/src/header-footer/elements.ts", "../../docx-preview/dist/webpack:/docx/src/header-footer/parts.ts", "../../docx-preview/dist/webpack:/docx/src/html-renderer.ts", "../../docx-preview/dist/webpack:/docx/src/javascript.ts", "../../docx-preview/dist/webpack:/docx/src/notes/elements.ts", "../../docx-preview/dist/webpack:/docx/src/notes/parts.ts", "../../docx-preview/dist/webpack:/docx/src/numbering/numbering-part.ts", "../../docx-preview/dist/webpack:/docx/src/numbering/numbering.ts", "../../docx-preview/dist/webpack:/docx/src/parser/xml-parser.ts", "../../docx-preview/dist/webpack:/docx/src/settings/settings-part.ts", "../../docx-preview/dist/webpack:/docx/src/settings/settings.ts", "../../docx-preview/dist/webpack:/docx/src/styles/styles-part.ts", "../../docx-preview/dist/webpack:/docx/src/theme/theme-part.ts", "../../docx-preview/dist/webpack:/docx/src/theme/theme.ts", "../../docx-preview/dist/webpack:/docx/src/utils.ts", "../../docx-preview/dist/webpack:/docx/src/vml/vml.ts", "../../docx-preview/dist/webpack:/docx/src/word-document.ts", "../../docx-preview/dist/webpack:/docx/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}", "../../docx-preview/dist/webpack:/docx/webpack/bootstrap", "../../docx-preview/dist/webpack:/docx/webpack/runtime/compat get default export", "../../docx-preview/dist/webpack:/docx/webpack/runtime/define property getters", "../../docx-preview/dist/webpack:/docx/webpack/runtime/hasOwnProperty shorthand", "../../docx-preview/dist/webpack:/docx/webpack/runtime/make namespace object", "../../docx-preview/dist/webpack:/docx/webpack/runtime/jsonp chunk loading", "../../docx-preview/dist/webpack:/docx/webpack/startup"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"jszip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(globalThis, (__WEBPACK_EXTERNAL_MODULE__626__) => {\nreturn ", "// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 100%27 preserveAspectRatio=%27none%27%3E%3Cpath d=%27m0,75 l5,0 l5,25 l10,-100%27 stroke=%27black%27 fill=%27none%27 vector-effect=%27non-scaling-stroke%27/%3E%3C/svg%3E\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@namespace \"http://www.w3.org/1998/Math/MathML\";math{display:inline-block;line-height:initial}mfrac{display:inline-block;vertical-align:-50%;text-align:center}mfrac>:first-child{border-bottom:solid thin currentColor}mfrac>*{display:block}msub>:nth-child(2){font-size:smaller;vertical-align:sub}msup>:nth-child(2){font-size:smaller;vertical-align:super}munder,mover,munderover{display:inline-flex;flex-flow:column nowrap;vertical-align:middle;text-align:center}munder>:not(:first-child),mover>:not(:first-child),munderover>:not(:first-child){font-size:smaller}munderover>:last-child{order:-1}mroot,msqrt{position:relative;display:inline-block;border-top:solid thin currentColor;margin-top:.5px;vertical-align:middle;margin-left:1ch}mroot:before,msqrt:before{content:\"\";display:inline-block;position:absolute;width:1ch;left:-1ch;top:-1px;bottom:0;background-image:url(${___CSS_LOADER_URL_REPLACEMENT_0___})}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/mathml.scss\"],\"names\":[],\"mappings\":\"AAAA,+CAAA,CAEA,KACI,oBAAA,CACA,mBAAA,CAGJ,MACI,oBAAA,CACA,mBAAA,CACA,iBAAA,CAEA,mBACI,qCAAA,CAGJ,QACI,aAAA,CAKJ,mBACI,iBAAA,CACA,kBAAA,CAKJ,mBACI,iBAAA,CACA,oBAAA,CAIR,wBACI,mBAAA,CACA,uBAAA,CACA,qBAAA,CACA,iBAAA,CAEA,iFACI,iBAAA,CAKJ,uBAAA,QAAA,CAGJ,YACI,iBAAA,CACA,oBAAA,CACA,kCAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CAEA,0BACI,UAAA,CACA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,SAAA,CACA,QAAA,CACA,QAAA,CACA,wDAAA\",\"sourcesContent\":[\"@namespace \\\"http://www.w3.org/1998/Math/MathML\\\";\\r\\n\\r\\nmath {\\r\\n    display: inline-block;\\r\\n    line-height: initial;\\r\\n}\\r\\n\\r\\nmfrac {\\r\\n    display: inline-block;\\r\\n    vertical-align: -50%;\\r\\n    text-align: center;\\r\\n\\r\\n    &>:first-child {\\r\\n        border-bottom: solid thin currentColor;\\r\\n    }\\r\\n\\r\\n    &>* {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\nmsub {\\r\\n    &>:nth-child(2) {\\r\\n        font-size: smaller;\\r\\n        vertical-align: sub;\\r\\n    }\\r\\n}\\r\\n\\r\\nmsup {\\r\\n    &>:nth-child(2) {\\r\\n        font-size: smaller;\\r\\n        vertical-align: super;\\r\\n    }\\r\\n}\\r\\n\\r\\nmunder, mover, munderover {\\r\\n    display: inline-flex;\\r\\n    flex-flow: column nowrap;\\r\\n    vertical-align: middle;\\r\\n    text-align: center;\\r\\n\\r\\n    &>:not(:first-child) {\\r\\n        font-size: smaller;\\r\\n    }\\r\\n}\\r\\n\\r\\nmunderover {\\r\\n    &>:last-child { order: -1; }\\r\\n}\\r\\n\\r\\nmroot, msqrt {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    border-top: solid thin currentColor;  \\r\\n    margin-top: 0.5px;\\r\\n    vertical-align: middle;  \\r\\n    margin-left: 1ch; \\r\\n\\r\\n    &:before {\\r\\n        content: \\\"\\\";\\r\\n        display: inline-block;\\r\\n        position: absolute;\\r\\n        width: 1ch;\\r\\n        left: -1ch;\\r\\n        top: -1px;\\r\\n        bottom: 0;\\r\\n        background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 100' preserveAspectRatio='none'%3E%3Cpath d='m0,75 l5,0 l5,25 l10,-100' stroke='black' fill='none' vector-effect='non-scaling-stroke'/%3E%3C/svg%3E\\\");\\r\\n    }\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n", "\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};", "\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};", "\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};", "import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n\r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static async load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        const zip = await JSZip.loadAsync(input);\r\n\t\treturn new OpenXmlPackage(zip, options);\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    async loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        const txt = await this.load(relsPath);\r\n\t\treturn txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null;\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}", "import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n    protected _xmlDocument: Document;\r\n\r\n    rels: Relationship[];\r\n\r\n    constructor(protected _package: OpenXmlPackage, public path: string) {\r\n    }\r\n\r\n    async load(): Promise<any> {\r\n\t\tthis.rels = await this._package.loadRelationships(this.path);\r\n\r\n\t\tconst xmlText = await this._package.load(this.path);\r\n\t\tconst xmlDoc = this._package.parseXmlDocument(xmlText);\r\n\r\n\t\tif (this._package.options.keepOrigin) {\r\n\t\t\tthis._xmlDocument = xmlDoc;\r\n\t\t}\r\n\r\n\t\tthis.parseXml(xmlDoc.firstElementChild);\r\n    }\r\n\r\n    save() {\r\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n    }\r\n\r\n    protected parseXml(root: Element) {\r\n    }\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | \"External\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\r\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\r\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\r\n}\r\n\r\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\r\n    return xml.elements(root).map(e => <Relationship>{\r\n        id: xml.attr(e, \"Id\"),\r\n        type: xml.attr(e, \"Type\"),\r\n        target: xml.attr(e, \"Target\"),\r\n        targetMode: xml.attr(e, \"TargetMode\")\r\n    });\r\n}", "import {\r\n\tDomType, WmlTable, IDomNumbering,\r\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell,\r\n\tWmlTableRow, NumberingPicBullet, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\r\n} from './document/dom';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\r\nimport { parseSectionProperties, SectionProperties } from './document/section';\r\nimport xml from './parser/xml-parser';\r\nimport { parseRunProperties, WmlRun } from './document/run';\r\nimport { parseBookmarkEnd, parseBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle, IDomSubStyle } from './document/style';\r\nimport { WmlFieldChar, WmlFieldSimple, WmlInstructionText } from './document/fields';\r\nimport { convertLength, LengthUsage, LengthUsageType } from './document/common';\r\nimport { parseVmlElement } from './vml/vml';\r\n\r\nexport var autos = {\r\n\tshd: \"inherit\",\r\n\tcolor: \"black\",\r\n\tborderColor: \"black\",\r\n\thighlight: \"transparent\"\r\n};\r\n\r\nconst supportedNamespaceURIs = [];\r\n\r\nconst mmlTagMap = {\r\n\t\"oMath\": DomType.MmlMath,\r\n\t\"oMathPara\": DomType.MmlMathParagraph,\r\n\t\"f\": DomType.MmlFraction,\r\n\t\"func\": DomType.MmlFunction,\r\n\t\"fName\": DomType.MmlFunctionName,\r\n\t\"num\": DomType.MmlNumerator,\r\n\t\"den\": DomType.MmlDenominator,\r\n\t\"rad\": DomType.MmlRadical,\r\n\t\"deg\": DomType.MmlDegree,\r\n\t\"e\": DomType.MmlBase,\r\n\t\"sSup\": DomType.MmlSuperscript,\r\n\t\"sSub\": DomType.MmlSubscript,\r\n\t\"sPre\": DomType.MmlPreSubSuper,\r\n\t\"sup\": DomType.MmlSuperArgument,\r\n\t\"sub\": DomType.MmlSubArgument,\r\n\t\"d\": DomType.MmlDelimiter,\r\n\t\"nary\": DomType.MmlNary,\r\n\t\"eqArr\": DomType.MmlEquationArray,\r\n\t\"lim\": DomType.MmlLimit,\r\n\t\"limLow\": DomType.MmlLimitLower,\r\n\t\"m\": DomType.MmlMatrix,\r\n\t\"mr\": DomType.MmlMatrixRow,\r\n\t\"box\": DomType.MmlBox,\r\n\t\"bar\": DomType.MmlBar,\r\n\t\"groupChr\": DomType.MmlGroupChar\r\n}\r\n\r\nexport interface DocumentParserOptions {\r\n\tignoreWidth: boolean;\r\n\tdebug: boolean;\r\n}\r\n\r\nexport class DocumentParser {\r\n\toptions: DocumentParserOptions;\r\n\r\n\tconstructor(options?: Partial<DocumentParserOptions>) {\r\n\t\tthis.options = {\r\n\t\t\tignoreWidth: false,\r\n\t\t\tdebug: false,\r\n\t\t\t...options\r\n\t\t};\r\n\t}\r\n\r\n\tparseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\r\n\t\tvar result = [];\r\n\r\n\t\tfor (let el of xml.elements(xmlDoc, elemName)) {\r\n\t\t\tconst node = new elemClass();\r\n\t\t\tnode.id = xml.attr(el, \"id\");\r\n\t\t\tnode.noteType = xml.attr(el, \"type\");\r\n\t\t\tnode.children = this.parseBodyElements(el);\r\n\t\t\tresult.push(node);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDocumentFile(xmlDoc: Element): DocumentElement {\r\n\t\tvar xbody = xml.element(xmlDoc, \"body\");\r\n\t\tvar background = xml.element(xmlDoc, \"background\");\r\n\t\tvar sectPr = xml.element(xbody, \"sectPr\");\r\n\r\n\t\treturn {\r\n\t\t\ttype: DomType.Document,\r\n\t\t\tchildren: this.parseBodyElements(xbody),\r\n\t\t\tprops: sectPr ? parseSectionProperties(sectPr, xml) : {} as SectionProperties,\r\n\t\t\tcssStyle: background ? this.parseBackground(background) : {},\r\n\t\t};\r\n\t}\r\n\r\n\tparseBackground(elem: Element): any {\r\n\t\tvar result = {};\r\n\t\tvar color = xmlUtil.colorAttr(elem, \"color\");\r\n\r\n\t\tif (color) {\r\n\t\t\tresult[\"background-color\"] = color;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseBodyElements(element: Element): OpenXmlElement[] {\r\n\t\tvar children = [];\r\n\r\n\t\tfor (let elem of xml.elements(element)) {\r\n\t\t\tswitch (elem.localName) {\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tchildren.push(this.parseParagraph(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tchildren.push(this.parseTable(elem));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tchildren.push(...this.parseSdt(elem, e => this.parseBodyElements(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn children;\r\n\t}\r\n\r\n\tparseStylesFile(xstyles: Element): IDomStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(xstyles, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"style\":\r\n\t\t\t\t\tresult.push(this.parseStyle(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"docDefaults\":\r\n\t\t\t\t\tresult.push(this.parseDefaultStyles(n));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseDefaultStyles(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: null,\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: []\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rPrDefault\":\r\n\t\t\t\t\tvar rPr = xml.element(c, \"rPr\");\r\n\r\n\t\t\t\t\tif (rPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(rPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPrDefault\":\r\n\t\t\t\t\tvar pPr = xml.element(c, \"pPr\");\r\n\r\n\t\t\t\t\tif (pPr)\r\n\t\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(pPr, {})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseStyle(node: Element): IDomStyle {\r\n\t\tvar result = <IDomStyle>{\r\n\t\t\tid: xml.attr(node, \"styleId\"),\r\n\t\t\tisDefault: xml.boolAttr(node, \"default\"),\r\n\t\t\tname: null,\r\n\t\t\ttarget: null,\r\n\t\t\tbasedOn: null,\r\n\t\t\tstyles: [],\r\n\t\t\tlinked: null\r\n\t\t};\r\n\r\n\t\tswitch (xml.attr(node, \"type\")) {\r\n\t\t\tcase \"paragraph\": result.target = \"p\"; break;\r\n\t\t\tcase \"table\": result.target = \"table\"; break;\r\n\t\t\tcase \"character\": result.target = \"span\"; break;\r\n\t\t\t//case \"numbering\": result.target = \"p\"; break;\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"basedOn\":\r\n\t\t\t\t\tresult.basedOn = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"name\":\r\n\t\t\t\t\tresult.name = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\tresult.linked = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"next\":\r\n\t\t\t\t\tresult.next = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aliases\":\r\n\t\t\t\t\tresult.aliases = xml.attr(n, \"val\").split(\",\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"p\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.paragraphProps = parseParagraphProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"span\",\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.runProps = parseRunProperties(n, xml);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.styles.push({\r\n\t\t\t\t\t\ttarget: \"td\", //TODO: maybe move to processor\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStylePr\":\r\n\t\t\t\t\tfor (let s of this.parseTableStyle(n))\r\n\t\t\t\t\t\tresult.styles.push(s);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rsid\":\r\n\t\t\t\tcase \"qFormat\":\r\n\t\t\t\tcase \"hidden\":\r\n\t\t\t\tcase \"semiHidden\":\r\n\t\t\t\tcase \"unhideWhenUsed\":\r\n\t\t\t\tcase \"autoRedefine\":\r\n\t\t\t\tcase \"uiPriority\":\r\n\t\t\t\t\t//TODO: ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableStyle(node: Element): IDomSubStyle[] {\r\n\t\tvar result = [];\r\n\r\n\t\tvar type = xml.attr(node, \"type\");\r\n\t\tvar selector = \"\";\r\n\t\tvar modificator = \"\";\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"firstRow\":\r\n\t\t\t\tmodificator = \".first-row\";\r\n\t\t\t\tselector = \"tr.first-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastRow\":\r\n\t\t\t\tmodificator = \".last-row\";\r\n\t\t\t\tselector = \"tr.last-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"firstCol\":\r\n\t\t\t\tmodificator = \".first-col\";\r\n\t\t\t\tselector = \"td.first-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastCol\":\r\n\t\t\t\tmodificator = \".last-col\";\r\n\t\t\t\tselector = \"td.last-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.odd-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.even-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.odd-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.even-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: return [];\r\n\t\t}\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} p`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: `${selector} span`,\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\ttarget: selector, //TODO: maybe move to processor\r\n\t\t\t\t\t\tmod: modificator,\r\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingFile(xnums: Element): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar mapping = {};\r\n\t\tvar bullets = [];\r\n\r\n\t\txmlUtil.foreach(xnums, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"abstractNum\":\r\n\t\t\t\t\tthis.parseAbstractNumbering(n, bullets)\r\n\t\t\t\t\t\t.forEach(x => result.push(x));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numPicBullet\":\r\n\t\t\t\t\tbullets.push(this.parseNumberingPicBullet(n));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"num\":\r\n\t\t\t\t\tvar numId = xml.attr(n, \"numId\");\r\n\t\t\t\t\tvar abstractNumId = xml.elementAttr(n, \"abstractNumId\", \"val\");\r\n\t\t\t\t\tmapping[abstractNumId] = numId;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tresult.forEach(x => x.id = mapping[x.id]);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n\t\tvar pict = xml.element(elem, \"pict\");\r\n\t\tvar shape = pict && xml.element(pict, \"shape\");\r\n\t\tvar imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n\t\treturn imagedata ? {\r\n\t\t\tid: xml.intAttr(elem, \"numPicBulletId\"),\r\n\t\t\tsrc: xml.attr(imagedata, \"id\"),\r\n\t\t\tstyle: xml.attr(shape, \"style\")\r\n\t\t} : null;\r\n\t}\r\n\r\n\tparseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n\t\tvar result = [];\r\n\t\tvar id = xml.attr(node, \"abstractNumId\");\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"lvl\":\r\n\t\t\t\t\tresult.push(this.parseNumberingLevel(id, n, bullets));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n\t\tvar result: IDomNumbering = {\r\n\t\t\tid: id,\r\n\t\t\tlevel: xml.intAttr(node, \"ilvl\"),\r\n\t\t\tstart: 1,\r\n\t\t\tpStyleName: undefined,\r\n\t\t\tpStyle: {},\r\n\t\t\trStyle: {},\r\n\t\t\tsuff: \"tab\"\r\n\t\t};\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\t\tresult.start = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.pStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseDefaultProperties(n, result.rStyle);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlPicBulletId\":\r\n\t\t\t\t\tvar id = xml.intAttr(n, \"val\");\r\n\t\t\t\t\tresult.bullet = bullets.find(x => x.id == id);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lvlText\":\r\n\t\t\t\t\tresult.levelText = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tresult.pStyleName = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"numFmt\":\r\n\t\t\t\t\tresult.format = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suff\":\r\n\t\t\t\t\tresult.suff = xml.attr(n, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseSdt(node: Element, parser: Function): OpenXmlElement[] {\r\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\r\n\t\treturn sdtContent ? parser(sdtContent) : [];\r\n\t}\r\n\r\n\tparseInserted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{ \r\n\t\t\ttype: DomType.Inserted, \r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseDeleted(node: Element, parentParser: Function): OpenXmlElement {\r\n\t\treturn <OpenXmlElement>{ \r\n\t\t\ttype: DomType.Deleted, \r\n\t\t\tchildren: parentParser(node)?.children ?? []\r\n\t\t};\r\n\t}\r\n\r\n\tparseParagraph(node: Element): OpenXmlElement {\r\n\t\tvar result = <WmlParagraph>{ type: DomType.Paragraph, children: [] };\r\n\r\n\t\tfor (let el of xml.elements(node)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"pPr\":\r\n\t\t\t\t\tthis.parseParagraphProperties(el, result);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hyperlink\":\r\n\t\t\t\t\tresult.children.push(this.parseHyperlink(el, result));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkStart\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkStart(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bookmarkEnd\":\r\n\t\t\t\t\tresult.children.push(parseBookmarkEnd(el, xml));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"oMath\":\r\n\t\t\t\tcase \"oMathPara\":\r\n\t\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tresult.children.push(...this.parseSdt(el, e => this.parseParagraph(e).children));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ins\":\r\n\t\t\t\t\tresult.children.push(this.parseInserted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"del\":\r\n\t\t\t\t\tresult.children.push(this.parseDeleted(el, e => this.parseParagraph(e)));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n\t\tthis.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n\t\t\tif (parseParagraphProperty(c, paragraph, xml))\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"pStyle\":\r\n\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tparagraph.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"framePr\":\r\n\t\t\t\t\tthis.parseFrame(c, paragraph);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseFrame(node: Element, paragraph: WmlParagraph) {\r\n\t\tvar dropCap = xml.attr(node, \"dropCap\");\r\n\r\n\t\tif (dropCap == \"drop\")\r\n\t\t\tparagraph.cssStyle[\"float\"] = \"left\";\r\n\t}\r\n\r\n\tparseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\r\n\t\tvar result: WmlHyperlink = <WmlHyperlink>{ type: DomType.Hyperlink, parent: parent, children: [] };\r\n\t\tvar anchor = xml.attr(node, \"anchor\");\r\n\t\tvar relId = xml.attr(node, \"id\");\r\n\r\n\t\tif (anchor)\r\n\t\t\tresult.href = \"#\" + anchor;\r\n\r\n\t\tif (relId)\r\n\t\t\tresult.id = relId;\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"r\":\r\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRun(node: Element, parent?: OpenXmlElement): WmlRun {\r\n\t\tvar result: WmlRun = <WmlRun>{ type: DomType.Run, parent: parent, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tc = this.checkAlternateContent(c);\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.Text,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});//.replace(\" \", \"\\u00A0\"); // TODO\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"delText\":\r\n\t\t\t\t\tresult.children.push(<WmlText>{\r\n\t\t\t\t\t\ttype: DomType.DeletedText,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldSimple\":\r\n\t\t\t\t\tresult.children.push(<WmlFieldSimple>{\r\n\t\t\t\t\t\ttype: DomType.SimpleField,\r\n\t\t\t\t\t\tinstruction: xml.attr(c, \"instr\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"instrText\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlInstructionText>{\r\n\t\t\t\t\t\ttype: DomType.Instruction,\r\n\t\t\t\t\t\ttext: c.textContent\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"fldChar\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n\t\t\t\t\tresult.children.push(<WmlFieldChar>{\r\n\t\t\t\t\t\ttype: DomType.ComplexField,\r\n\t\t\t\t\t\tcharType: xml.attr(c, \"fldCharType\"),\r\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\r\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noBreakHyphen\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.NoBreakHyphen });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"br\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: xml.attr(c, \"type\") || \"textWrapping\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lastRenderedPageBreak\":\r\n\t\t\t\t\tresult.children.push(<WmlBreak>{\r\n\t\t\t\t\t\ttype: DomType.Break,\r\n\t\t\t\t\t\tbreak: \"lastRenderedPageBreak\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sym\":\r\n\t\t\t\t\tresult.children.push(<WmlSymbol>{\r\n\t\t\t\t\t\ttype: DomType.Symbol,\r\n\t\t\t\t\t\tfont: xml.attr(c, \"font\"),\r\n\t\t\t\t\t\tchar: xml.attr(c, \"char\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tab\":\r\n\t\t\t\t\tresult.children.push({ type: DomType.Tab });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"footnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.FootnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"endnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\r\n\t\t\t\t\t\ttype: DomType.EndnoteReference,\r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"drawing\":\r\n\t\t\t\t\tlet d = this.parseDrawing(c);\r\n\r\n\t\t\t\t\tif (d)\r\n\t\t\t\t\t\tresult.children = [d];\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pict\":\r\n\t\t\t\t\tresult.children.push(this.parseVmlPicture(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rPr\":\r\n\t\t\t\t\tthis.parseRunProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathElement(elem: Element): OpenXmlElement {\r\n\t\tconst propsTag = `${elem.localName}Pr`;\r\n\t\tconst result = { type: mmlTagMap[elem.localName], children: [] } as OpenXmlElement;\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst childType = mmlTagMap[el.localName];\r\n\r\n\t\t\tif (childType) {\r\n\t\t\t\tresult.children.push(this.parseMathElement(el));\r\n\t\t\t} else if (el.localName == \"r\") {\r\n\t\t\t\tvar run = this.parseRun(el);\r\n\t\t\t\trun.type = DomType.MmlRun;\r\n\t\t\t\tresult.children.push(run);\r\n\t\t\t} else if (el.localName == propsTag) {\r\n\t\t\t\tresult.props = this.parseMathProperies(el);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseMathProperies(elem: Element): Record<string, any> {\r\n\t\tconst result: Record<string, any> = {};\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tswitch (el.localName) {\r\n\t\t\t\tcase \"chr\": result.char = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"vertJc\": result.verticalJustification = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"pos\": result.position = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"degHide\": result.hideDegree = xml.boolAttr(el, \"val\"); break;\r\n\t\t\t\tcase \"begChr\": result.beginChar = xml.attr(el, \"val\"); break;\r\n\t\t\t\tcase \"endChr\": result.endChar = xml.attr(el, \"val\"); break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseRunProperties(elem: Element, run: WmlRun) {\r\n\t\tthis.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"rStyle\":\r\n\t\t\t\t\trun.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseVmlPicture(elem: Element): OpenXmlElement {\r\n\t\tconst result = { type: DomType.VmlPicture, children: [] };\r\n\r\n\t\tfor (const el of xml.elements(elem)) {\r\n\t\t\tconst child = parseVmlElement(el, this);\r\n\t\t\tchild && result.children.push(child);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tcheckAlternateContent(elem: Element): Element {\r\n\t\tif (elem.localName != 'AlternateContent')\r\n\t\t\treturn elem;\r\n\r\n\t\tvar choice = xml.element(elem, \"Choice\");\r\n\r\n\t\tif (choice) {\r\n\t\t\tvar requires = xml.attr(choice, \"Requires\");\r\n\t\t\tvar namespaceURI = elem.lookupNamespaceURI(requires);\r\n\r\n\t\t\tif (supportedNamespaceURIs.includes(namespaceURI))\r\n\t\t\t\treturn choice.firstElementChild;\r\n\t\t}\r\n\r\n\t\treturn xml.element(elem, \"Fallback\")?.firstElementChild;\r\n\t}\r\n\r\n\tparseDrawing(node: Element): OpenXmlElement {\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\tcase \"anchor\":\r\n\t\t\t\t\treturn this.parseDrawingWrapper(n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseDrawingWrapper(node: Element): OpenXmlElement {\r\n\t\tvar result = <OpenXmlElement>{ type: DomType.Drawing, children: [], cssStyle: {} };\r\n\t\tvar isAnchor = node.localName == \"anchor\";\r\n\r\n\t\t//TODO\r\n\t\t// result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\r\n\t\t// result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\r\n\t\t// result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\r\n\t\t// result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\r\n\r\n\t\tlet wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null;\r\n\t\tlet simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n\t\tlet posX = { relative: \"page\", align: \"left\", offset: \"0\" };\r\n\t\tlet posY = { relative: \"page\", align: \"top\", offset: \"0\" };\r\n\r\n\t\tfor (var n of xml.elements(node)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"simplePos\":\r\n\t\t\t\t\tif (simplePos) {\r\n\t\t\t\t\t\tposX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\t\tposY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"extent\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"positionH\":\r\n\t\t\t\tcase \"positionV\":\r\n\t\t\t\t\tif (!simplePos) {\r\n\t\t\t\t\t\tlet pos = n.localName == \"positionH\" ? posX : posY;\r\n\t\t\t\t\t\tvar alignNode = xml.element(n, \"align\");\r\n\t\t\t\t\t\tvar offsetNode = xml.element(n, \"posOffset\");\r\n\r\n\t\t\t\t\t\tpos.relative = xml.attr(n, \"relativeFrom\") ?? pos.relative;\r\n\r\n\t\t\t\t\t\tif (alignNode)\r\n\t\t\t\t\t\t\tpos.align = alignNode.textContent;\r\n\r\n\t\t\t\t\t\tif (offsetNode)\r\n\t\t\t\t\t\t\tpos.offset = xmlUtil.sizeValue(offsetNode, LengthUsage.Emu);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapTopAndBottom\":\r\n\t\t\t\t\twrapType = \"wrapTopAndBottom\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wrapNone\":\r\n\t\t\t\t\twrapType = \"wrapNone\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"graphic\":\r\n\t\t\t\t\tvar g = this.parseGraphic(n);\r\n\r\n\t\t\t\t\tif (g)\r\n\t\t\t\t\t\tresult.children.push(g);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (wrapType == \"wrapTopAndBottom\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\r\n\t\t\tif (posX.align) {\r\n\t\t\t\tresult.cssStyle['text-align'] = posX.align;\r\n\t\t\t\tresult.cssStyle['width'] = \"100%\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (wrapType == \"wrapNone\") {\r\n\t\t\tresult.cssStyle['display'] = 'block';\r\n\t\t\tresult.cssStyle['position'] = 'relative';\r\n\t\t\tresult.cssStyle[\"width\"] = \"0px\";\r\n\t\t\tresult.cssStyle[\"height\"] = \"0px\";\r\n\r\n\t\t\tif (posX.offset)\r\n\t\t\t\tresult.cssStyle[\"left\"] = posX.offset;\r\n\t\t\tif (posY.offset)\r\n\t\t\t\tresult.cssStyle[\"top\"] = posY.offset;\r\n\t\t}\r\n\t\telse if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n\t\t\tresult.cssStyle[\"float\"] = posX.align;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseGraphic(elem: Element): OpenXmlElement {\r\n\t\tvar graphicData = xml.element(elem, \"graphicData\");\r\n\r\n\t\tfor (let n of xml.elements(graphicData)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"pic\":\r\n\t\t\t\t\treturn this.parsePicture(n);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tparsePicture(elem: Element): IDomImage {\r\n\t\tvar result = <IDomImage>{ type: DomType.Image, src: \"\", cssStyle: {} };\r\n\t\tvar blipFill = xml.element(elem, \"blipFill\");\r\n\t\tvar blip = xml.element(blipFill, \"blip\");\r\n\r\n\t\tresult.src = xml.attr(blip, \"embed\");\r\n\r\n\t\tvar spPr = xml.element(elem, \"spPr\");\r\n\t\tvar xfrm = xml.element(spPr, \"xfrm\");\r\n\r\n\t\tresult.cssStyle[\"position\"] = \"relative\";\r\n\r\n\t\tfor (var n of xml.elements(xfrm)) {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"ext\":\r\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"off\":\r\n\t\t\t\t\tresult.cssStyle[\"left\"] = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n\t\t\t\t\tresult.cssStyle[\"top\"] = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTable(node: Element): WmlTable {\r\n\t\tvar result: WmlTable = { type: DomType.Table, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tr\":\r\n\t\t\t\t\tresult.children.push(this.parseTableRow(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblGrid\":\r\n\t\t\t\t\tresult.columns = this.parseTableColumns(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblPr\":\r\n\t\t\t\t\tthis.parseTableProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableColumns(node: Element): WmlTableColumn[] {\r\n\t\tvar result = [];\r\n\r\n\t\txmlUtil.foreach(node, n => {\r\n\t\t\tswitch (n.localName) {\r\n\t\t\t\tcase \"gridCol\":\r\n\t\t\t\t\tresult.push({ width: xml.lengthAttr(n, \"w\") });\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableProperties(elem: Element, table: WmlTable) {\r\n\t\ttable.cssStyle = {};\r\n\t\ttable.cellStyle = {};\r\n\r\n\t\tthis.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tblStyle\":\r\n\t\t\t\t\ttable.styleName = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLook\":\r\n\t\t\t\t\ttable.className = values.classNameOftblLook(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblpPr\":\r\n\t\t\t\t\tthis.parseTablePosition(c, table);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleColBandSize\":\r\n\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleRowBandSize\":\r\n\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tswitch (table.cssStyle[\"text-align\"]) {\r\n\t\t\tcase \"center\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\ttable.cssStyle[\"margin-right\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"right\":\r\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\r\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseTablePosition(node: Element, table: WmlTable) {\r\n\t\tvar topFromText = xml.lengthAttr(node, \"topFromText\");\r\n\t\tvar bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\r\n\t\tvar rightFromText = xml.lengthAttr(node, \"rightFromText\");\r\n\t\tvar leftFromText = xml.lengthAttr(node, \"leftFromText\");\r\n\r\n\t\ttable.cssStyle[\"float\"] = 'left';\r\n\t\ttable.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n\t\ttable.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n\t\ttable.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n\t\ttable.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n\t}\r\n\r\n\tparseTableRow(node: Element): WmlTableRow {\r\n\t\tvar result: WmlTableRow = { type: DomType.Row, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tc\":\r\n\t\t\t\t\tresult.children.push(this.parseTableCell(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trPr\":\r\n\t\t\t\t\tthis.parseTableRowProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n\t\trow.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\trow.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblHeader\":\r\n\t\t\t\t\trow.isHeader = xml.boolAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseTableCell(node: Element): OpenXmlElement {\r\n\t\tvar result: WmlTableCell = { type: DomType.Cell, children: [] };\r\n\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"tbl\":\r\n\t\t\t\t\tresult.children.push(this.parseTable(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"p\":\r\n\t\t\t\t\tresult.children.push(this.parseParagraph(c));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcPr\":\r\n\t\t\t\t\tthis.parseTableCellProperties(c, result);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n\t\tcell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"gridSpan\":\r\n\t\t\t\t\tcell.span = xml.intAttr(c, \"val\", null);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vMerge\":\r\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"cnfStyle\":\r\n\t\t\t\t\tcell.className = values.classNameOfCnfStyle(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tparseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n\t\tstyle = style || {};\r\n\r\n\t\txmlUtil.foreach(elem, c => {\r\n\t\t\tif (handler?.(c))\r\n\t\t\t\treturn;\r\n\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"jc\":\r\n\t\t\t\t\tstyle[\"text-align\"] = values.valueOfJc(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"textAlignment\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"color\":\r\n\t\t\t\t\tstyle[\"color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.color);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"sz\":\r\n\t\t\t\t\tstyle[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"shd\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"fill\", null, autos.shd);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"highlight\":\r\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.highlight);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t// style.verticalAlign = values.valueOfVertAlign(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"position\":\r\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcW\":\r\n\t\t\t\t\tif (this.options.ignoreWidth)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblW\":\r\n\t\t\t\t\tstyle[\"width\"] = values.valueOfSize(c, \"w\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"trHeight\":\r\n\t\t\t\t\tthis.parseTrHeight(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"strike\":\r\n\t\t\t\t\tstyle[\"text-decoration\"] = xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"b\":\r\n\t\t\t\t\tstyle[\"font-weight\"] = xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\tstyle[\"font-style\"] = xml.boolAttr(c, \"val\", true) ? \"italic\" : \"normal\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"caps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"uppercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"smallCaps\":\r\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"lowercase\" : \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"u\":\r\n\t\t\t\t\tthis.parseUnderline(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ind\":\r\n\t\t\t\tcase \"tblInd\":\r\n\t\t\t\t\tthis.parseIndentation(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"rFonts\":\r\n\t\t\t\t\tthis.parseFont(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellSpacing\":\r\n\t\t\t\t\tstyle[\"border-spacing\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tstyle[\"border-collapse\"] = \"separate\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pBdr\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bdr\":\r\n\t\t\t\t\tstyle[\"border\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tcBorders\":\r\n\t\t\t\t\tthis.parseBorderProperties(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vanish\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\", true))\r\n\t\t\t\t\t\tstyle[\"display\"] = \"none\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kern\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"noWrap\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style[\"white-space\"] = \"nowrap\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblCellMar\":\r\n\t\t\t\tcase \"tcMar\":\r\n\t\t\t\t\tthis.parseMarginProperties(c, childStyle || style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblLayout\":\r\n\t\t\t\t\tstyle[\"table-layout\"] = values.valueOfTblLayout(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"vAlign\":\r\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"spacing\":\r\n\t\t\t\t\tif (elem.localName == \"pPr\")\r\n\t\t\t\t\t\tthis.parseSpacing(c, style);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"wordWrap\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\")) //TODO: test with examples\r\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"suppressAutoHyphens\":\r\n\t\t\t\t\tstyle[\"hyphens\"] = xml.boolAttr(c, \"val\", true) ? \"none\" : \"auto\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"lang\":\r\n\t\t\t\t\tstyle[\"$lang\"] = xml.attr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bCs\":\r\n\t\t\t\tcase \"iCs\":\r\n\t\t\t\tcase \"szCs\":\r\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\r\n\t\t\t\tcase \"outlineLvl\": //TODO\r\n\t\t\t\tcase \"contextualSpacing\": //TODO\r\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\r\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\r\n\t\t\t\tcase \"webHidden\": //TODO - maybe web-hidden should be implemented\r\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore \r\n\t\t\t\tcase \"suppressLineNumbers\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\r\n\t\t\t\tcase \"widowControl\": //TODO - maybe ignore \r\n\t\t\t\tcase \"bidi\": //TODO - maybe ignore\r\n\t\t\t\tcase \"rtl\": //TODO - maybe ignore\r\n\t\t\t\tcase \"noProof\": //ignore spellcheck\r\n\t\t\t\t\t//TODO ignore\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this.options.debug)\r\n\t\t\t\t\t\tconsole.warn(`DOCX: Unknown document element: ${elem.localName}.${c.localName}`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn style;\r\n\t}\r\n\r\n\tparseUnderline(node: Element, style: Record<string, string>) {\r\n\t\tvar val = xml.attr(node, \"val\");\r\n\r\n\t\tif (val == null)\r\n\t\t\treturn;\r\n\r\n\t\tswitch (val) {\r\n\t\t\tcase \"dash\":\r\n\t\t\tcase \"dashDotDotHeavy\":\r\n\t\t\tcase \"dashDotHeavy\":\r\n\t\t\tcase \"dashedHeavy\":\r\n\t\t\tcase \"dashLong\":\r\n\t\t\tcase \"dashLongHeavy\":\r\n\t\t\tcase \"dotDash\":\r\n\t\t\tcase \"dotDotDash\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dashed\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"dotted\":\r\n\t\t\tcase \"dottedHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dotted\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"double\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"double\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"single\":\r\n\t\t\tcase \"thick\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"wave\":\r\n\t\t\tcase \"wavyDouble\":\r\n\t\t\tcase \"wavyHeavy\":\r\n\t\t\t\tstyle[\"text-decoration-style\"] = \"wavy\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"words\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"none\":\r\n\t\t\t\tstyle[\"text-decoration\"] = \"none\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tvar col = xmlUtil.colorAttr(node, \"color\");\r\n\r\n\t\tif (col)\r\n\t\t\tstyle[\"text-decoration-color\"] = col;\r\n\t}\r\n\r\n\tparseFont(node: Element, style: Record<string, string>) {\r\n\t\tvar ascii = xml.attr(node, \"ascii\");\r\n\t\tvar asciiTheme = values.themeValue(node, \"asciiTheme\");\r\n\r\n\t\tvar fonts = [ascii, asciiTheme].filter(x => x).join(', ');\r\n\r\n\t\tif (fonts.length > 0)\r\n\t\t\tstyle[\"font-family\"] = fonts;\r\n\t}\r\n\r\n\tparseIndentation(node: Element, style: Record<string, string>) {\r\n\t\tvar firstLine = xml.lengthAttr(node, \"firstLine\");\r\n\t\tvar hanging = xml.lengthAttr(node, \"hanging\");\r\n\t\tvar left = xml.lengthAttr(node, \"left\");\r\n\t\tvar start = xml.lengthAttr(node, \"start\");\r\n\t\tvar right = xml.lengthAttr(node, \"right\");\r\n\t\tvar end = xml.lengthAttr(node, \"end\");\r\n\r\n\t\tif (firstLine) style[\"text-indent\"] = firstLine;\r\n\t\tif (hanging) style[\"text-indent\"] = `-${hanging}`;\r\n\t\tif (left || start) style[\"margin-left\"] = left || start;\r\n\t\tif (right || end) style[\"margin-right\"] = right || end;\r\n\t}\r\n\r\n\tparseSpacing(node: Element, style: Record<string, string>) {\r\n\t\tvar before = xml.lengthAttr(node, \"before\");\r\n\t\tvar after = xml.lengthAttr(node, \"after\");\r\n\t\tvar line = xml.intAttr(node, \"line\", null);\r\n\t\tvar lineRule = xml.attr(node, \"lineRule\");\r\n\r\n\t\tif (before) style[\"margin-top\"] = before;\r\n\t\tif (after) style[\"margin-bottom\"] = after;\r\n\r\n\t\tif (line !== null) {\r\n\t\t\tswitch (lineRule) {\r\n\t\t\t\tcase \"auto\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `${(line / 240).toFixed(2)}`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"atLeast\":\r\n\t\t\t\t\tstyle[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tstyle[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tparseMarginProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"padding-left\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"padding-right\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"padding-top\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"padding-bottom\"] = values.valueOfMargin(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tparseTrHeight(node: Element, output: Record<string, string>) {\r\n\t\tswitch (xml.attr(node, \"hRule\")) {\r\n\t\t\tcase \"exact\":\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"atLeast\":\r\n\t\t\tdefault:\r\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\r\n\t\t\t\t// min-height doesn't work for tr\r\n\t\t\t\t//output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tparseBorderProperties(node: Element, output: Record<string, string>) {\r\n\t\txmlUtil.foreach(node, c => {\r\n\t\t\tswitch (c.localName) {\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\toutput[\"border-left\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\toutput[\"border-right\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\toutput[\"border-top\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\toutput[\"border-bottom\"] = values.valueOfBorder(c);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst knownColors = ['black', 'blue', 'cyan', 'darkBlue', 'darkCyan', 'darkGray', 'darkGreen', 'darkMagenta', 'darkRed', 'darkYellow', 'green', 'lightGray', 'magenta', 'none', 'red', 'white', 'yellow'];\r\n\r\nclass xmlUtil {\r\n\tstatic foreach(node: Element, cb: (n: Element) => void) {\r\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\r\n\t\t\tlet n = node.childNodes[i];\r\n\r\n\t\t\tif (n.nodeType == Node.ELEMENT_NODE)\r\n\t\t\t\tcb(<Element>n);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n\t\tvar v = xml.attr(node, attrName);\r\n\r\n\t\tif (v) {\r\n\t\t\tif (v == \"auto\") {\r\n\t\t\t\treturn autoColor;\r\n\t\t\t} else if (knownColors.includes(v)) {\r\n\t\t\t\treturn v;\r\n\t\t\t}\r\n\r\n\t\t\treturn `#${v}`;\r\n\t\t}\r\n\r\n\t\tvar themeColor = xml.attr(node, \"themeColor\");\r\n\r\n\t\treturn themeColor ? `var(--docx-${themeColor}-color)` : defValue;\r\n\t}\r\n\r\n\tstatic sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\r\n\t\treturn convertLength(node.textContent, type);\r\n\t}\r\n}\r\n\r\nclass values {\r\n\tstatic themeValue(c: Element, attr: string) {\r\n\t\tvar val = xml.attr(c, attr);\r\n\t\treturn val ? `var(--docx-${val}-font)` : null;\r\n\t}\r\n\r\n\tstatic valueOfSize(c: Element, attr: string) {\r\n\t\tvar type = LengthUsage.Dxa;\r\n\r\n\t\tswitch (xml.attr(c, \"type\")) {\r\n\t\t\tcase \"dxa\": break;\r\n\t\t\tcase \"pct\": type = LengthUsage.Percent; break;\r\n\t\t\tcase \"auto\": return \"auto\";\r\n\t\t}\r\n\r\n\t\treturn xml.lengthAttr(c, attr, type);\r\n\t}\r\n\r\n\tstatic valueOfMargin(c: Element) {\r\n\t\treturn xml.lengthAttr(c, \"w\");\r\n\t}\r\n\r\n\tstatic valueOfBorder(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tif (type == \"nil\")\r\n\t\t\treturn \"none\";\r\n\r\n\t\tvar color = xmlUtil.colorAttr(c, \"color\");\r\n\t\tvar size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\r\n\r\n\t\treturn `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\r\n\t}\r\n\r\n\tstatic valueOfTblLayout(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\t\treturn type == \"fixed\" ? \"fixed\" : \"auto\";\r\n\t}\r\n\r\n\tstatic classNameOfCnfStyle(c: Element) {\r\n\t\tconst val = xml.attr(c, \"val\");\r\n\t\tconst classes = [\r\n\t\t\t'first-row', 'last-row', 'first-col', 'last-col',\r\n\t\t\t'odd-col', 'even-col', 'odd-row', 'even-row',\r\n\t\t\t'ne-cell', 'nw-cell', 'se-cell', 'sw-cell'\r\n\t\t];\r\n\r\n\t\treturn classes.filter((_, i) => val[i] == '1').join(' ');\r\n\t}\r\n\r\n\tstatic valueOfJc(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase \"left\": return \"left\";\r\n\t\t\tcase \"center\": return \"center\";\r\n\t\t\tcase \"end\":\r\n\t\t\tcase \"right\": return \"right\";\r\n\t\t\tcase \"both\": return \"justify\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic valueOfVertAlign(c: Element, asTagName: boolean = false) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"subscript\": return \"sub\";\r\n\t\t\tcase \"superscript\": return asTagName ? \"sup\" : \"super\";\r\n\t\t}\r\n\r\n\t\treturn asTagName ? null : type;\r\n\t}\r\n\r\n\tstatic valueOfTextAlignment(c: Element) {\r\n\t\tvar type = xml.attr(c, \"val\");\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"auto\":\r\n\t\t\tcase \"baseline\": return \"baseline\";\r\n\t\t\tcase \"top\": return \"top\";\r\n\t\t\tcase \"center\": return \"middle\";\r\n\t\t\tcase \"bottom\": return \"bottom\";\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}\r\n\r\n\tstatic addSize(a: string, b: string): string {\r\n\t\tif (a == null) return b;\r\n\t\tif (b == null) return a;\r\n\r\n\t\treturn `calc(${a} + ${b})`; //TODO\r\n\t}\r\n\r\n\tstatic classNameOftblLook(c: Element) {\r\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\r\n\t\tlet className = \"\";\r\n\r\n\t\tif (xml.boolAttr(c, \"firstRow\") || (val & 0x0020)) className += \" first-row\";\r\n\t\tif (xml.boolAttr(c, \"lastRow\") || (val & 0x0040)) className += \" last-row\";\r\n\t\tif (xml.boolAttr(c, \"firstColumn\") || (val & 0x0080)) className += \" first-col\";\r\n\t\tif (xml.boolAttr(c, \"lastColumn\") || (val & 0x0100)) className += \" last-col\";\r\n\t\tif (xml.boolAttr(c, \"noHBand\") || (val & 0x0200)) className += \" no-hband\";\r\n\t\tif (xml.boolAttr(c, \"noVBand\") || (val & 0x0400)) className += \" no-vband\";\r\n\r\n\t\treturn className.trim();\r\n\t}\r\n}", "import { Part } from \"../common/part\";\r\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\r\n\r\nexport class CorePropsPart extends Part {\r\n    props: CorePropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCoreProps(root, this._package.xmlParser);\r\n    }\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CorePropsDeclaration {\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    creator: string,\r\n    keywords: string,\r\n    language: string,\r\n    lastModifiedBy: string,\r\n    revision: number,\r\n}\r\n\r\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\r\n    const result = <CorePropsDeclaration>{};\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"title\": result.title = el.textContent; break;\r\n            case \"description\": result.description = el.textContent; break;\r\n            case \"subject\": result.subject = el.textContent; break;\r\n            case \"creator\": result.creator = el.textContent; break;\r\n            case \"keywords\": result.keywords = el.textContent; break;\r\n            case \"language\": result.language = el.textContent; break;\r\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\r\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}", "import { Part } from \"../common/part\";\r\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\r\n\r\nexport class CustomPropsPart extends Part {\r\n    props: CustomProperty[];\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCustomProps(root, this._package.xmlParser);\r\n    }\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CustomProperty {\r\n\tformatId: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tvalue: string;\r\n}\r\n\r\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\r\n\treturn xml.elements(root, \"property\").map(e => {\r\n\t\tconst firstChild = e.firstChild;\r\n\r\n\t\treturn {\r\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\r\n\t\t\tname: xml.attr(e, \"name\"),\r\n\t\t\ttype: firstChild.nodeName,\r\n\t\t\tvalue: firstChild.textContent\r\n\t\t};\r\n\t});\r\n}", "import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    const result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\nimport { DomType, OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlBookmarkStart extends OpenXmlElement {\r\n    id: string;\r\n    name: string;\r\n    colFirst: number;\r\n    colLast: number;\r\n}\r\n\r\nexport interface WmlBookmarkEnd extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\r\n    return {\r\n        type: DomType.BookmarkStart,\r\n        id: xml.attr(elem, \"id\"),\r\n        name: xml.attr(elem, \"name\"),\r\n        colFirst: xml.intAttr(elem, \"colFirst\"),\r\n        colLast: xml.intAttr(elem, \"colLast\")\r\n    }\r\n}\r\n\r\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\r\n    return {\r\n        type: DomType.BookmarkEnd,\r\n        id: xml.attr(elem, \"id\")\r\n    }\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport const ns = {\r\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\r\n\tcompatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\",\r\n\tmath: \"http://schemas.openxmlformats.org/officeDocument/2006/math\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\" | \"\";\r\nexport type Length = string;\r\n\r\nexport interface Font {\r\n    name: string;\r\n    family: string;\r\n}\r\n\r\nexport interface CommonProperties {\r\n    fontSize: Length;\r\n    color: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n    Dxa: { mul: 0.05, unit: \"pt\" }, //twips\r\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\r\n    FontSize: { mul: 0.5, unit: \"pt\" },\r\n    Border: { mul: 0.125, unit: \"pt\" },\r\n    Point: { mul: 1, unit: \"pt\" },\r\n    Percent: { mul: 0.02, unit: \"%\" },\r\n    LineHeight: { mul: 1 / 240, unit: \"\" },\r\n    VmlEmu: { mul: 1 / 12700, unit: \"\" },\r\n}\r\n\r\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): string {\r\n    //\"simplified\" docx documents use pt's as units\r\n    if (val == null || /.+(p[xt]|[%])$/.test(val)) {\r\n        return val;\r\n    }\r\n\r\n\treturn `${(parseInt(val) * usage.mul).toFixed(2)}${usage.unit}`;\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n    switch (v) {\r\n        case \"1\": return true;\r\n        case \"0\": return false;\r\n        case \"on\": return true;\r\n        case \"off\": return false;\r\n        case \"true\": return true;\r\n        case \"false\": return false;\r\n        default: return defaultValue;\r\n    }\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n    return val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\r\n    if(elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    switch(elem.localName) {\r\n        case \"color\": \r\n            props.color = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"sz\":\r\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n            break;\r\n\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}", "import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { DocumentElement } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    body: DocumentElement\r\n\r\n    parseXml(root: Element) {\r\n        this.body = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}", "export enum DomType {\r\n    Document = \"document\",\r\n    Paragraph = \"paragraph\",\r\n    Run = \"run\",\r\n    Break = \"break\",\r\n    NoBreakHyphen = \"noBreakHyphen\",\r\n    Table = \"table\",\r\n    Row = \"row\",\r\n    Cell = \"cell\",\r\n    Hyperlink = \"hyperlink\",\r\n    Drawing = \"drawing\",\r\n    Image = \"image\",\r\n    Text = \"text\",\r\n    Tab = \"tab\",\r\n    Symbol = \"symbol\",\r\n    BookmarkStart = \"bookmarkStart\",\r\n    BookmarkEnd = \"bookmarkEnd\",\r\n    Footer = \"footer\",\r\n    Header = \"header\",\r\n    FootnoteReference = \"footnoteReference\", \r\n\tEndnoteReference = \"endnoteReference\",\r\n    Footnote = \"footnote\",\r\n    Endnote = \"endnote\",\r\n    SimpleField = \"simpleField\",\r\n    ComplexField = \"complexField\",\r\n    Instruction = \"instruction\",\r\n\tVmlPicture = \"vmlPicture\",\r\n\tMmlMath = \"mmlMath\",\r\n\tMmlMathParagraph = \"mmlMathParagraph\",\r\n\tMmlFraction = \"mmlFraction\",\r\n\tMmlFunction = \"mmlFunction\",\r\n\tMmlFunctionName = \"mmlFunctionName\",\r\n\tMmlNumerator = \"mmlNumerator\",\r\n\tMmlDenominator = \"mmlDenominator\",\r\n\tMmlRadical = \"mmlRadical\",\r\n\tMmlBase = \"mmlBase\",\r\n\tMmlDegree = \"mmlDegree\",\r\n\tMmlSuperscript = \"mmlSuperscript\",\r\n\tMmlSubscript = \"mmlSubscript\",\r\n\tMmlPreSubSuper = \"mmlPreSubSuper\",\r\n\tMmlSubArgument = \"mmlSubArgument\",\r\n\tMmlSuperArgument = \"mmlSuperArgument\",\r\n\tMmlNary = \"mmlNary\",\r\n\tMmlDelimiter = \"mmlDelimiter\",\r\n\tMmlRun = \"mmlRun\",\r\n\tMmlEquationArray = \"mmlEquationArray\",\r\n\tMmlLimit = \"mmlLimit\",\r\n\tMmlLimitLower = \"mmlLimitLower\",\r\n\tMmlMatrix = \"mmlMatrix\",\r\n\tMmlMatrixRow = \"mmlMatrixRow\",\r\n\tMmlBox = \"mmlBox\",\r\n\tMmlBar = \"mmlBar\",\r\n\tMmlGroupChar = \"mmlGroupChar\",\r\n\tVmlElement = \"vmlElement\",\r\n\tInserted = \"inserted\",\r\n\tDeleted = \"deleted\",\r\n\tDeletedText = \"deletedText\"\r\n}\r\n\r\nexport interface OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[];\r\n    cssStyle?: Record<string, string>;\r\n    props?: Record<string, any>;\r\n    \r\n\tstyleName?: string; //style name\r\n\tclassName?: string; //class mods\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport abstract class OpenXmlElementBase implements OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[] = [];\r\n    cssStyle?: Record<string, string> = {};\r\n    props?: Record<string, any>;\r\n\r\n    className?: string;\r\n    styleName?: string;\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport interface WmlHyperlink extends OpenXmlElement {\r\n\tid?: string;\r\n    href?: string;\r\n}\r\n\r\nexport interface WmlNoteReference extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport interface WmlBreak extends OpenXmlElement{\r\n    break: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\";\r\n}\r\n\r\nexport interface WmlText extends OpenXmlElement{\r\n    text: string;\r\n}\r\n\r\nexport interface WmlSymbol extends OpenXmlElement {\r\n    font: string;\r\n    char: string;\r\n}\r\n\r\nexport interface WmlTable extends OpenXmlElement {\r\n    columns?: WmlTableColumn[];\r\n    cellStyle?: Record<string, string>;\r\n\r\n\tcolBandSize?: number;\r\n\trowBandSize?: number;\r\n}\r\n\r\nexport interface WmlTableRow extends OpenXmlElement {\r\n\tisHeader?: boolean;\r\n}\r\n\r\nexport interface WmlTableCell extends OpenXmlElement {\r\n\tverticalMerge?: 'restart' | 'continue' | string;\r\n    span?: number;\r\n}\r\n\r\nexport interface IDomImage extends OpenXmlElement {\r\n    src: string;\r\n}\r\n\r\nexport interface WmlTableColumn {\r\n    width?: string;\r\n}\r\n\r\nexport interface IDomNumbering {\r\n    id: string;\r\n    level: number;\r\n    start: number;\r\n    pStyleName: string;\r\n    pStyle: Record<string, string>;\r\n    rStyle: Record<string, string>;\r\n    levelText?: string;\r\n    suff: string;\r\n    format?: string;\r\n    bullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n    id: number;\r\n    src: string;\r\n    style?: string;\r\n}\r\n", "import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: number;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.intAttr(elem, \"line\"),\r\n        lineRule: xml.attr(elem, \"lineRule\")\r\n    } as LineSpacing;\r\n}", "import { OpenXmlElement } from \"./dom\";\r\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\n\r\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\r\n}\r\n\r\nexport interface ParagraphProperties extends CommonProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n\tstyleName?: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    if(parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n        \r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            return false; // TODO\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            return false; //TODO\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleName = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n        \r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\nimport { CommonProperties, parseCommonProperty } from \"./common\";\r\nimport { OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlRun extends OpenXmlElement, RunProperties {\r\n    id?: string;\r\n    verticalAlign?: string;\r\n\tfieldRun?: boolean;  \r\n}\r\n\r\nexport interface RunProperties extends CommonProperties {\r\n\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    if (parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    return false;\r\n}", "import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { Borders, parseBorders } from \"./border\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface PageSize {\r\n    width: Length, \r\n    height: Length, \r\n    orientation: \"landscape\" | string \r\n}\r\n\r\nexport interface PageNumber {\r\n    start: number;\r\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\r\n    chapStyle: string;\r\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\" \r\n        | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\r\n        | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\", \r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string | \"first\" | \"even\" | \"default\";\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    pageBorders: Borders;\r\n    pageNumber: PageNumber;\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n    titlePage: boolean;\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n            \r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n\r\n            case \"titlePg\":\r\n                section.titlePage = xml.boolAttr(e, \"val\", true);\r\n                break;\r\n\r\n            case \"pgBorders\":\r\n                section.pageBorders = parseBorders(e, xml);\r\n                break;\r\n\r\n            case \"pgNumType\":\r\n                section.pageNumber = parsePageNumber(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\r\n    return {\r\n        chapSep: xml.attr(elem, \"chapSep\"),\r\n        chapStyle: xml.attr(elem, \"chapStyle\"),\r\n        format: xml.attr(elem, \"fmt\"),\r\n        start: xml.intAttr(elem, \"start\")\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}", "import { WordDocument } from './word-document';\r\nimport { DocumentParser } from './document-parser';\r\nimport { HtmlRenderer } from './html-renderer';\r\n\r\nexport interface Options {\r\n    inWrapper: boolean;\r\n    ignoreWidth: boolean;\r\n    ignoreHeight: boolean;\r\n    ignoreFonts: boolean;\r\n    breakPages: boolean;\r\n    debug: boolean;\r\n    experimental: boolean;\r\n    className: string;\r\n    trimXmlDeclaration: boolean;\r\n    renderHeaders: boolean;\r\n    renderFooters: boolean;\r\n    renderFootnotes: boolean;\r\n\trenderEndnotes: boolean;\r\n    ignoreLastRenderedPageBreak: boolean;\r\n\tuseBase64URL: boolean;\r\n\tuseMathMLPolyfill: boolean;\r\n\trenderChanges: boolean;\r\n}\r\n\r\nexport const defaultOptions: Options = {\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n    breakPages: true,\r\n    debug: false,\r\n    experimental: false,\r\n    className: \"docx\",\r\n    inWrapper: true,\r\n    trimXmlDeclaration: true,\r\n    ignoreLastRenderedPageBreak: true,\r\n    renderHeaders: true,\r\n    renderFooters: true,\r\n    renderFootnotes: true,\r\n\trenderEndnotes: true,\r\n\tuseBase64URL: false,\r\n\tuseMathMLPolyfill: false,\r\n\trenderChanges: false\r\n}\r\n\r\nexport function praseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any>  {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    return WordDocument.load(data, new DocumentParser(ops), ops);\r\n}\r\n\r\nexport async function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    const renderer = new HtmlRenderer(window.document);\r\n\tconst doc = await WordDocument.load(data, new DocumentParser(ops), ops)\r\n\r\n\trenderer.render(doc, bodyContainer, styleContainer, ops);\r\n\t\r\n    return doc;\r\n}", "import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nconst embedFontTypeMap = {\r\n    embedRegular: 'regular',\r\n    embedBold: 'bold',\r\n    embedItalic: 'italic',\r\n    embedBoldItalic: 'boldItalic',\r\n}\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    embedFontRefs: EmbedFontRef[];\r\n}\r\n\r\nexport interface EmbedFontRef {\r\n    id: string;\r\n    key: string;\r\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\r\n}\r\n\r\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\r\n    return xml.elements(root).map(el => parseFont(el, xml));\r\n}\r\n\r\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xml.attr(elem, \"name\"),\r\n        embedFontRefs: []\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n            case \"embedBold\":\r\n            case \"embedItalic\":\r\n            case \"embedBoldItalic\":\r\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\r\n    return { \r\n        id: xml.attr(elem, \"id\"), \r\n        key: xml.attr(elem, \"fontKey\"),\r\n        type: embedFontTypeMap[elem.localName]\r\n    };\r\n}", "import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport class WmlHeader extends OpenXmlElementBase {\r\n    type: DomType = DomType.Header;\r\n}\r\n\r\nexport class WmlFooter extends OpenXmlElementBase {\r\n    type: DomType = DomType.Footer;\r\n}", "import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { OpenXmlElement } from \"../document/dom\";\r\nimport { WmlHeader, WmlFooter } from \"./elements\";\r\n\r\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\r\n    rootElement: T;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.rootElement = this.createRootElement();\r\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\r\n    }\r\n\r\n    protected abstract createRootElement(): T;\r\n}\r\n\r\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\r\n    protected createRootElement(): WmlHeader {\r\n        return new WmlHeader();\r\n    }\r\n}\r\n\r\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\r\n    protected createRootElement(): WmlFooter {\r\n        return new WmlFooter();\r\n    }\r\n}", "import { WordDocument } from './word-document';\r\nimport {\r\n\tDomType, WmlTable, IDomNumbering,\r\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\r\n} from './document/dom';\r\nimport { CommonProperties } from './document/common';\r\nimport { Options } from './docx-preview';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph } from './document/paragraph';\r\nimport { asArray, escapeClassName, isString, keyBy, mergeDeep } from './utils';\r\nimport { computePixelToPoint, updateTabStop } from './javascript';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { FooterHeaderReference, SectionProperties } from './document/section';\r\nimport { WmlRun, RunProperties } from './document/run';\r\nimport { WmlBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle } from './document/style';\r\nimport { WmlBaseNote, WmlFootnote } from './notes/elements';\r\nimport { ThemePart } from './theme/theme-part';\r\nimport { BaseHeaderFooterPart } from './header-footer/parts';\r\nimport { Part } from './common/part';\r\nimport mathMLCSS from \"./mathml.scss\";\r\nimport { VmlElement } from './vml/vml';\r\n\r\nconst ns = {\r\n\tsvg: \"http://www.w3.org/2000/svg\",\r\n\tmathML: \"http://www.w3.org/1998/Math/MathML\"\r\n}\r\n\r\ninterface CellPos {\r\n\tcol: number;\r\n\trow: number;\r\n}\r\n\r\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\r\n\r\nexport class HtmlRenderer {\r\n\r\n\tclassName: string = \"docx\";\r\n\trootSelector: string;\r\n\tdocument: WordDocument;\r\n\toptions: Options;\r\n\tstyleMap: Record<string, IDomStyle> = {};\r\n\tcurrentPart: Part = null;\r\n\r\n\ttableVerticalMerges: CellVerticalMergeType[] = [];\r\n\tcurrentVerticalMerge: CellVerticalMergeType = null;\r\n\ttableCellPositions: CellPos[] = [];\r\n\tcurrentCellPosition: CellPos = null;\r\n\r\n\tfootnoteMap: Record<string, WmlFootnote> = {};\r\n\tendnoteMap: Record<string, WmlFootnote> = {};\r\n\tcurrentFootnoteIds: string[];\r\n\tcurrentEndnoteIds: string[] = [];\r\n\tusedHederFooterParts: any[] = [];\r\n\r\n\tdefaultTabSize: string;\r\n\tcurrentTabs: any[] = [];\r\n\ttabsTimeout: any = 0;\r\n\r\n\tconstructor(public htmlDocument: Document) {\r\n\t}\r\n\r\n\trender(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n\t\tthis.document = document;\r\n\t\tthis.options = options;\r\n\t\tthis.className = options.className;\r\n\t\tthis.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\r\n\t\tthis.styleMap = null;\r\n\r\n\t\tstyleContainer = styleContainer || bodyContainer;\r\n\r\n\t\tremoveAllElements(styleContainer);\r\n\t\tremoveAllElements(bodyContainer);\r\n\r\n\t\tappendComment(styleContainer, \"docxjs library predefined styles\");\r\n\t\tstyleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n\t\tif (!window.MathMLElement && options.useMathMLPolyfill) {\r\n\t\t\tappendComment(styleContainer, \"docxjs mathml polyfill styles\");\r\n\t\t\tstyleContainer.appendChild(createStyleElement(mathMLCSS));\r\n\t\t} \r\n\r\n\t\tif (document.themePart) {\r\n\t\t\tappendComment(styleContainer, \"docxjs document theme values\");\r\n\t\t\tthis.renderTheme(document.themePart, styleContainer);\r\n\t\t}\r\n\r\n\t\tif (document.stylesPart != null) {\r\n\t\t\tthis.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n\t\t\tappendComment(styleContainer, \"docxjs document styles\");\r\n\t\t\tstyleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n\t\t}\r\n\r\n\t\tif (document.numberingPart) {\r\n\t\t\tthis.prodessNumberings(document.numberingPart.domNumberings);\r\n\r\n\t\t\tappendComment(styleContainer, \"docxjs document numbering styles\");\r\n\t\t\tstyleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n\t\t\t//styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n\t\t}\r\n\r\n\t\tif (document.footnotesPart) {\r\n\t\t\tthis.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n\t\t}\r\n\r\n\t\tif (document.endnotesPart) {\r\n\t\t\tthis.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n\t\t}\r\n\r\n\t\tif (document.settingsPart) {\r\n\t\t\tthis.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n\t\t}\r\n\r\n\t\tif (!options.ignoreFonts && document.fontTablePart)\r\n\t\t\tthis.renderFontTable(document.fontTablePart, styleContainer);\r\n\r\n\t\tvar sectionElements = this.renderSections(document.documentPart.body);\r\n\r\n\t\tif (this.options.inWrapper) {\r\n\t\t\tbodyContainer.appendChild(this.renderWrapper(sectionElements));\r\n\t\t} else {\r\n\t\t\tappendChildren(bodyContainer, sectionElements);\r\n\t\t}\r\n\r\n\t\tthis.refreshTabStops();\r\n\t}\r\n\r\n\trenderTheme(themePart: ThemePart, styleContainer: HTMLElement) {\r\n\t\tconst variables = {};\r\n\t\tconst fontScheme = themePart.theme?.fontScheme;\r\n\r\n\t\tif (fontScheme) {\r\n\t\t\tif (fontScheme.majorFont) {\r\n\t\t\t\tvariables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\r\n\t\t\t}\r\n\r\n\t\t\tif (fontScheme.minorFont) {\r\n\t\t\t\tvariables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst colorScheme = themePart.theme?.colorScheme;\r\n\r\n\t\tif (colorScheme) {\r\n\t\t\tfor (let [k, v] of Object.entries(colorScheme.colors)) {\r\n\t\t\t\tvariables[`--docx-${k}-color`] = `#${v}`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst cssText = this.styleToString(`.${this.className}`, variables);\r\n\t\tstyleContainer.appendChild(createStyleElement(cssText));\r\n\t}\r\n\r\n\trenderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\r\n\t\tfor (let f of fontsPart.fonts) {\r\n\t\t\tfor (let ref of f.embedFontRefs) {\r\n\t\t\t\tthis.document.loadFont(ref.id, ref.key).then(fontData => {\r\n\t\t\t\t\tconst cssValues = {\r\n\t\t\t\t\t\t'font-family': f.name,\r\n\t\t\t\t\t\t'src': `url(${fontData})`\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (ref.type == \"bold\" || ref.type == \"boldItalic\") {\r\n\t\t\t\t\t\tcssValues['font-weight'] = 'bold';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ref.type == \"italic\" || ref.type == \"boldItalic\") {\r\n\t\t\t\t\t\tcssValues['font-style'] = 'italic';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tappendComment(styleContainer, `docxjs ${f.name} font`);\r\n\t\t\t\t\tconst cssText = this.styleToString(\"@font-face\", cssValues);\r\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(cssText));\r\n\t\t\t\t\tthis.refreshTabStops();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprocessStyleName(className: string): string {\r\n\t\treturn className ? `${this.className}_${escapeClassName(className)}` : this.className;\r\n\t}\r\n\r\n\tprocessStyles(styles: IDomStyle[]) {\r\n\t\tconst stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\r\n\r\n\t\tfor (const style of styles.filter(x => x.basedOn)) {\r\n\t\t\tvar baseStyle = stylesMap[style.basedOn];\r\n\r\n\t\t\tif (baseStyle) {\r\n\t\t\t\tstyle.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n\t\t\t\tstyle.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n\r\n\t\t\t\tfor (const baseValues of baseStyle.styles) {\r\n\t\t\t\t\tconst styleValues = style.styles.find(x => x.target == baseValues.target);\r\n\r\n\t\t\t\t\tif (styleValues) {\r\n\t\t\t\t\t\tthis.copyStyleProperties(baseValues.values, styleValues.values);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstyle.styles.push({ ...baseValues, values: { ...baseValues.values } });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.options.debug)\r\n\t\t\t\tconsole.warn(`Can't find base style ${style.basedOn}`);\r\n\t\t}\r\n\r\n\t\tfor (let style of styles) {\r\n\t\t\tstyle.cssName = this.processStyleName(style.id);\r\n\t\t}\r\n\r\n\t\treturn stylesMap;\r\n\t}\r\n\r\n\tprodessNumberings(numberings: IDomNumbering[]) {\r\n\t\tfor (let num of numberings.filter(n => n.pStyleName)) {\r\n\t\t\tconst style = this.findStyle(num.pStyleName);\r\n\r\n\t\t\tif (style?.paragraphProps?.numbering) {\r\n\t\t\t\tstyle.paragraphProps.numbering.level = num.level;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprocessElement(element: OpenXmlElement) {\r\n\t\tif (element.children) {\r\n\t\t\tfor (var e of element.children) {\r\n\t\t\t\te.parent = element;\r\n\r\n\t\t\t\tif (e.type == DomType.Table) {\r\n\t\t\t\t\tthis.processTable(e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processElement(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprocessTable(table: WmlTable) {\r\n\t\tfor (var r of table.children) {\r\n\t\t\tfor (var c of r.children) {\r\n\t\t\t\tc.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n\t\t\t\t\t\"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n\t\t\t\t\t\"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n\t\t\t\t]);\r\n\r\n\t\t\t\tthis.processElement(c);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcopyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n\t\tif (!input)\r\n\t\t\treturn output;\r\n\r\n\t\tif (output == null) output = {};\r\n\t\tif (attrs == null) attrs = Object.getOwnPropertyNames(input);\r\n\r\n\t\tfor (var key of attrs) {\r\n\t\t\tif (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n\t\t\t\toutput[key] = input[key];\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tcreateSection(className: string, props: SectionProperties) {\r\n\t\tvar elem = this.createElement(\"section\", { className });\r\n\r\n\t\tif (props) {\r\n\t\t\tif (props.pageMargins) {\r\n\t\t\t\telem.style.paddingLeft = props.pageMargins.left;\r\n\t\t\t\telem.style.paddingRight = props.pageMargins.right;\r\n\t\t\t\telem.style.paddingTop = props.pageMargins.top;\r\n\t\t\t\telem.style.paddingBottom = props.pageMargins.bottom;\r\n\t\t\t}\r\n\r\n\t\t\tif (props.pageSize) {\r\n\t\t\t\tif (!this.options.ignoreWidth)\r\n\t\t\t\t\telem.style.width = props.pageSize.width;\r\n\t\t\t\tif (!this.options.ignoreHeight)\r\n\t\t\t\t\telem.style.minHeight = props.pageSize.height;\r\n\t\t\t}\r\n\r\n\t\t\tif (props.columns && props.columns.numberOfColumns) {\r\n\t\t\t\telem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n\t\t\t\telem.style.columnGap = props.columns.space;\r\n\r\n\t\t\t\tif (props.columns.separator) {\r\n\t\t\t\t\telem.style.columnRule = \"1px solid black\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn elem;\r\n\t}\r\n\r\n\trenderSections(document: DocumentElement): HTMLElement[] {\r\n\t\tconst result = [];\r\n\r\n\t\tthis.processElement(document);\r\n\t\tconst sections = this.splitBySection(document.children);\r\n\t\tlet prevProps = null;\r\n\r\n\t\tfor (let i = 0, l = sections.length; i < l; i++) {\r\n\t\t\tthis.currentFootnoteIds = [];\r\n\r\n\t\t\tconst section = sections[i];\r\n\t\t\tconst props = section.sectProps || document.props;\r\n\t\t\tconst sectionElement = this.createSection(this.className, props);\r\n\t\t\tthis.renderStyleValues(document.cssStyle, sectionElement);\r\n\r\n\t\t\tthis.options.renderHeaders && this.renderHeaderFooter(props.headerRefs, props,\r\n\t\t\t\tresult.length, prevProps != props, sectionElement);\r\n\r\n\t\t\tvar contentElement = this.createElement(\"article\");\r\n\t\t\tthis.renderElements(section.elements, contentElement);\r\n\t\t\tsectionElement.appendChild(contentElement);\r\n\r\n\t\t\tif (this.options.renderFootnotes) {\r\n\t\t\t\tthis.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.renderEndnotes && i == l - 1) {\r\n\t\t\t\tthis.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\r\n\t\t\t}\r\n\r\n\t\t\tthis.options.renderFooters && this.renderHeaderFooter(props.footerRefs, props,\r\n\t\t\t\tresult.length, prevProps != props, sectionElement);\r\n\r\n\t\t\tresult.push(sectionElement);\r\n\t\t\tprevProps = props;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderHeaderFooter(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, into: HTMLElement) {\r\n\t\tif (!refs) return;\r\n\r\n\t\tvar ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\r\n\t\t\t?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\r\n\t\t\t?? refs.find(x => x.type == \"default\");\r\n\r\n\t\tvar part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\r\n\r\n\t\tif (part) {\r\n\t\t\tthis.currentPart = part;\r\n\t\t\tif (!this.usedHederFooterParts.includes(part.path)) {\r\n\t\t\t\tthis.processElement(part.rootElement);\r\n\t\t\t\tthis.usedHederFooterParts.push(part.path);\r\n\t\t\t}\r\n\t\t\tthis.renderElements([part.rootElement], into);\r\n\t\t\tthis.currentPart = null;\r\n\t\t}\r\n\t}\r\n\r\n\tisPageBreakElement(elem: OpenXmlElement): boolean {\r\n\t\tif (elem.type != DomType.Break)\r\n\t\t\treturn false;\r\n\r\n\t\tif ((elem as WmlBreak).break == \"lastRenderedPageBreak\")\r\n\t\t\treturn !this.options.ignoreLastRenderedPageBreak;\r\n\r\n\t\treturn (elem as WmlBreak).break == \"page\";\r\n\t}\r\n\r\n\tsplitBySection(elements: OpenXmlElement[]): { sectProps: SectionProperties, elements: OpenXmlElement[] }[] {\r\n\t\tvar current = { sectProps: null, elements: [] };\r\n\t\tvar result = [current];\r\n\r\n\t\tfor (let elem of elements) {\r\n\t\t\tif (elem.type == DomType.Paragraph) {\r\n\t\t\t\tconst s = this.findStyle((elem as WmlParagraph).styleName);\r\n\r\n\t\t\t\tif (s?.paragraphProps?.pageBreakBefore) {\r\n\t\t\t\t\tcurrent.sectProps = sectProps;\r\n\t\t\t\t\tcurrent = { sectProps: null, elements: [] };\r\n\t\t\t\t\tresult.push(current);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcurrent.elements.push(elem);\r\n\r\n\t\t\tif (elem.type == DomType.Paragraph) {\r\n\t\t\t\tconst p = elem as WmlParagraph;\r\n\r\n\t\t\t\tvar sectProps = p.sectionProps;\r\n\t\t\t\tvar pBreakIndex = -1;\r\n\t\t\t\tvar rBreakIndex = -1;\r\n\r\n\t\t\t\tif (this.options.breakPages && p.children) {\r\n\t\t\t\t\tpBreakIndex = p.children.findIndex(r => {\r\n\t\t\t\t\t\trBreakIndex = r.children?.findIndex(this.isPageBreakElement.bind(this)) ?? -1;\r\n\t\t\t\t\t\treturn rBreakIndex != -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (sectProps || pBreakIndex != -1) {\r\n\t\t\t\t\tcurrent.sectProps = sectProps;\r\n\t\t\t\t\tcurrent = { sectProps: null, elements: [] };\r\n\t\t\t\t\tresult.push(current);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (pBreakIndex != -1) {\r\n\t\t\t\t\tlet breakRun = p.children[pBreakIndex];\r\n\t\t\t\t\tlet splitRun = rBreakIndex < breakRun.children.length - 1;\r\n\r\n\t\t\t\t\tif (pBreakIndex < p.children.length - 1 || splitRun) {\r\n\t\t\t\t\t\tvar children = elem.children;\r\n\t\t\t\t\t\tvar newParagraph = { ...elem, children: children.slice(pBreakIndex) };\r\n\t\t\t\t\t\telem.children = children.slice(0, pBreakIndex);\r\n\t\t\t\t\t\tcurrent.elements.push(newParagraph);\r\n\r\n\t\t\t\t\t\tif (splitRun) {\r\n\t\t\t\t\t\t\tlet runChildren = breakRun.children;\r\n\t\t\t\t\t\t\tlet newRun = { ...breakRun, children: runChildren.slice(0, rBreakIndex) };\r\n\t\t\t\t\t\t\telem.children.push(newRun);\r\n\t\t\t\t\t\t\tbreakRun.children = runChildren.slice(rBreakIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet currentSectProps = null;\r\n\r\n\t\tfor (let i = result.length - 1; i >= 0; i--) {\r\n\t\t\tif (result[i].sectProps == null) {\r\n\t\t\t\tresult[i].sectProps = currentSectProps;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentSectProps = result[i].sectProps\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderWrapper(children: HTMLElement[]) {\r\n\t\treturn this.createElement(\"div\", { className: `${this.className}-wrapper` }, children);\r\n\t}\r\n\r\n\trenderDefaultStyle() {\r\n\t\tvar c = this.className;\r\n\t\tvar styleText = `\r\n.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n.${c} { color: black; hyphens: auto; }\r\nsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\r\nsection.${c}>article { margin-bottom: auto; z-index: 1; }\r\nsection.${c}>footer { z-index: 1; }\r\n.${c} table { border-collapse: collapse; }\r\n.${c} table td, .${c} table th { vertical-align: top; }\r\n.${c} p { margin: 0pt; min-height: 1em; }\r\n.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\r\n.${c} a { color: inherit; text-decoration: inherit; }\r\n`;\r\n\r\n\t\treturn createStyleElement(styleText);\r\n\t}\r\n\r\n\t// renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n\t//     let css = \"\";\r\n\t//     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n\t//     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n\t//     const topCounters = [];\r\n\r\n\t//     for(let num of numberingPart.numberings) {\r\n\t//         const absNum = numberingMap[num.abstractId];\r\n\r\n\t//         for(let lvl of absNum.levels) {\r\n\t//             const className = this.numberingClass(num.id, lvl.level);\r\n\t//             let listStyleType = \"none\";\r\n\r\n\t//             if(lvl.text && lvl.format == 'decimal') {\r\n\t//                 const counter = this.numberingCounter(num.id, lvl.level);\r\n\r\n\t//                 if (lvl.level > 0) {\r\n\t//                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n\t//                         \"counter-reset\": counter\r\n\t//                     });\r\n\t//                 } else {\r\n\t//                     topCounters.push(counter);\r\n\t//                 }\r\n\r\n\t//                 css += this.styleToString(`p.${className}:before`, {\r\n\t//                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n\t//                     \"counter-increment\": counter\r\n\t//                 });\r\n\t//             } else if(lvl.bulletPictureId) {\r\n\t//                 let pict = bulletMap[lvl.bulletPictureId];\r\n\t//                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\r\n\t//                 css += this.styleToString(`p.${className}:before`, {\r\n\t//                     \"content\": \"' '\",\r\n\t//                     \"display\": \"inline-block\",\r\n\t//                     \"background\": `var(${variable})`\r\n\t//                 }, pict.style);\r\n\r\n\t//                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n\t//                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n\t//                     container.appendChild(createStyleElement(text));\r\n\t//                 });\r\n\t//             } else {\r\n\t//                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n\t//             }\r\n\r\n\t//             css += this.styleToString(`p.${className}`, {\r\n\t//                 \"display\": \"list-item\",\r\n\t//                 \"list-style-position\": \"inside\",\r\n\t//                 \"list-style-type\": listStyleType,\r\n\t//                 //TODO\r\n\t//                 //...num.style\r\n\t//             });\r\n\t//         }\r\n\t//     }\r\n\r\n\t//     if (topCounters.length > 0) {\r\n\t//         css += this.styleToString(`.${this.className}-wrapper`, {\r\n\t//             \"counter-reset\": topCounters.join(\" \")\r\n\t//         });\r\n\t//     }\r\n\r\n\t//     return createStyleElement(css);\r\n\t// }\r\n\r\n\trenderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\r\n\t\tvar styleText = \"\";\r\n\t\tvar resetCounters = [];\r\n\r\n\t\tfor (var num of numberings) {\r\n\t\t\tvar selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n\t\t\tvar listStyleType = \"none\";\r\n\r\n\t\t\tif (num.bullet) {\r\n\t\t\t\tlet valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\r\n\t\t\t\t\t\"content\": \"' '\",\r\n\t\t\t\t\t\"display\": \"inline-block\",\r\n\t\t\t\t\t\"background\": `var(${valiable})`\r\n\t\t\t\t}, num.bullet.style);\r\n\r\n\t\t\t\tthis.document.loadNumberingImage(num.bullet.src).then(data => {\r\n\t\t\t\t\tvar text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\r\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(text));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (num.levelText) {\r\n\t\t\t\tlet counter = this.numberingCounter(num.id, num.level);\r\n\t\t\t\tconst counterReset = counter + \" \" + (num.start - 1);\r\n\t\t\t\tif (num.level > 0) {\r\n\t\t\t\t\tstyleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n\t\t\t\t\t\t\"counter-reset\": counterReset\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// reset all level counters with start value\r\n\t\t\t\tresetCounters.push(counterReset);\r\n\r\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\r\n\t\t\t\t\t\"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n\t\t\t\t\t\"counter-increment\": counter,\r\n\t\t\t\t\t...num.rStyle,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlistStyleType = this.numFormatToCssValue(num.format);\r\n\t\t\t}\r\n\r\n\t\t\tstyleText += this.styleToString(selector, {\r\n\t\t\t\t\"display\": \"list-item\",\r\n\t\t\t\t\"list-style-position\": \"inside\",\r\n\t\t\t\t\"list-style-type\": listStyleType,\r\n\t\t\t\t...num.pStyle\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (resetCounters.length > 0) {\r\n\t\t\tstyleText += this.styleToString(this.rootSelector, {\r\n\t\t\t\t\"counter-reset\": resetCounters.join(\" \")\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn createStyleElement(styleText);\r\n\t}\r\n\r\n\trenderStyles(styles: IDomStyle[]): HTMLElement {\r\n\t\tvar styleText = \"\";\r\n\t\tconst stylesMap = this.styleMap;\r\n\t\tconst defautStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n\t\tfor (const style of styles) {\r\n\t\t\tvar subStyles = style.styles;\r\n\r\n\t\t\tif (style.linked) {\r\n\t\t\t\tvar linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n\t\t\t\tif (linkedStyle)\r\n\t\t\t\t\tsubStyles = subStyles.concat(linkedStyle.styles);\r\n\t\t\t\telse if (this.options.debug)\r\n\t\t\t\t\tconsole.warn(`Can't find linked style ${style.linked}`);\r\n\t\t\t}\r\n\r\n\t\t\tfor (const subStyle of subStyles) {\r\n\t\t\t\t//TODO temporary disable modificators until test it well\r\n\t\t\t\tvar selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''} \r\n\r\n\t\t\t\tif (style.target != subStyle.target)\r\n\t\t\t\t\tselector += ` ${subStyle.target}`;\r\n\r\n\t\t\t\tif (defautStyles[style.target] == style)\r\n\t\t\t\t\tselector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n\t\t\t\tstyleText += this.styleToString(selector, subStyle.values);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn createStyleElement(styleText);\r\n\t}\r\n\r\n\trenderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, into: HTMLElement) {\r\n\t\tvar notes = noteIds.map(id => notesMap[id]).filter(x => x);\r\n\r\n\t\tif (notes.length > 0) {\r\n\t\t\tvar result = this.createElement(\"ol\", null, this.renderElements(notes));\r\n\t\t\tinto.appendChild(result);\r\n\t\t}\r\n\t}\r\n\r\n\trenderElement(elem: OpenXmlElement): Node | Node[] {\r\n\t\tswitch (elem.type) {\r\n\t\t\tcase DomType.Paragraph:\r\n\t\t\t\treturn this.renderParagraph(elem as WmlParagraph);\r\n\r\n\t\t\tcase DomType.BookmarkStart:\r\n\t\t\t\treturn this.renderBookmarkStart(elem as WmlBookmarkStart);\r\n\r\n\t\t\tcase DomType.BookmarkEnd:\r\n\t\t\t\treturn null; //ignore bookmark end\r\n\r\n\t\t\tcase DomType.Run:\r\n\t\t\t\treturn this.renderRun(elem as WmlRun);\r\n\r\n\t\t\tcase DomType.Table:\r\n\t\t\t\treturn this.renderTable(elem);\r\n\r\n\t\t\tcase DomType.Row:\r\n\t\t\t\treturn this.renderTableRow(elem);\r\n\r\n\t\t\tcase DomType.Cell:\r\n\t\t\t\treturn this.renderTableCell(elem);\r\n\r\n\t\t\tcase DomType.Hyperlink:\r\n\t\t\t\treturn this.renderHyperlink(elem);\r\n\r\n\t\t\tcase DomType.Drawing:\r\n\t\t\t\treturn this.renderDrawing(elem);\r\n\r\n\t\t\tcase DomType.Image:\r\n\t\t\t\treturn this.renderImage(elem as IDomImage);\r\n\r\n\t\t\tcase DomType.Text:\r\n\t\t\t\treturn this.renderText(elem as WmlText);\r\n\r\n\t\t\tcase DomType.Text:\r\n\t\t\t\treturn this.renderText(elem as WmlText);\r\n\r\n\t\t\tcase DomType.DeletedText:\r\n\t\t\t\treturn this.renderDeletedText(elem as WmlText);\r\n\t\r\n\t\t\tcase DomType.Tab:\r\n\t\t\t\treturn this.renderTab(elem);\r\n\r\n\t\t\tcase DomType.Symbol:\r\n\t\t\t\treturn this.renderSymbol(elem as WmlSymbol);\r\n\r\n\t\t\tcase DomType.Break:\r\n\t\t\t\treturn this.renderBreak(elem as WmlBreak);\r\n\r\n\t\t\tcase DomType.Footer:\r\n\t\t\t\treturn this.renderContainer(elem, \"footer\");\r\n\r\n\t\t\tcase DomType.Header:\r\n\t\t\t\treturn this.renderContainer(elem, \"header\");\r\n\r\n\t\t\tcase DomType.Footnote:\r\n\t\t\tcase DomType.Endnote:\r\n\t\t\t\treturn this.renderContainer(elem, \"li\");\r\n\r\n\t\t\tcase DomType.FootnoteReference:\r\n\t\t\t\treturn this.renderFootnoteReference(elem as WmlNoteReference);\r\n\r\n\t\t\tcase DomType.EndnoteReference:\r\n\t\t\t\treturn this.renderEndnoteReference(elem as WmlNoteReference);\r\n\r\n\t\t\tcase DomType.NoBreakHyphen:\r\n\t\t\t\treturn this.createElement(\"wbr\");\r\n\r\n\t\t\tcase DomType.VmlPicture:\r\n\t\t\t\treturn this.renderVmlPicture(elem);\r\n\r\n\t\t\tcase DomType.VmlElement:\r\n\t\t\t\treturn this.renderVmlElement(elem as VmlElement);\r\n\t\r\n\t\t\tcase DomType.MmlMath:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"math\", { xmlns: ns.mathML });\r\n\t\r\n\t\t\tcase DomType.MmlMathParagraph:\r\n\t\t\t\treturn this.renderContainer(elem, \"span\");\r\n\r\n\t\t\tcase DomType.MmlFraction:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mfrac\");\r\n\r\n\t\t\tcase DomType.MmlBase:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \r\n\t\t\t\t\telem.parent.type == DomType.MmlMatrixRow ? \"mtd\" : \"mrow\");\r\n\r\n\t\t\tcase DomType.MmlNumerator:\r\n\t\t\tcase DomType.MmlDenominator:\r\n\t\t\tcase DomType.MmlFunction:\r\n\t\t\tcase DomType.MmlLimit:\r\n\t\t\tcase DomType.MmlBox:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n\t\t\tcase DomType.MmlGroupChar:\r\n\t\t\t\treturn this.renderMmlGroupChar(elem);\r\n\r\n\t\t\tcase DomType.MmlLimitLower:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"munder\");\r\n\r\n\t\t\tcase DomType.MmlMatrix:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mtable\");\r\n\r\n\t\t\tcase DomType.MmlMatrixRow:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mtr\");\r\n\t\r\n\t\t\tcase DomType.MmlRadical:\r\n\t\t\t\treturn this.renderMmlRadical(elem);\r\n\r\n\t\t\tcase DomType.MmlSuperscript:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"msup\");\r\n\r\n\t\t\tcase DomType.MmlSubscript:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"msub\");\r\n\r\n\t\t\tcase DomType.MmlDegree:\r\n\t\t\tcase DomType.MmlSuperArgument:\r\n\t\t\tcase DomType.MmlSubArgument:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mn\");\r\n\r\n\t\t\tcase DomType.MmlFunctionName:\r\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"ms\");\r\n\t\r\n\t\t\tcase DomType.MmlDelimiter:\r\n\t\t\t\treturn this.renderMmlDelimiter(elem);\r\n\r\n\t\t\tcase DomType.MmlRun:\r\n\t\t\t\treturn this.renderMmlRun(elem);\r\n\r\n\t\t\tcase DomType.MmlNary:\r\n\t\t\t\treturn this.renderMmlNary(elem);\r\n\r\n\t\t\tcase DomType.MmlPreSubSuper:\r\n\t\t\t\treturn this.renderMmlPreSubSuper(elem);\r\n\r\n\t\t\tcase DomType.MmlBar:\r\n\t\t\t\treturn this.renderMmlBar(elem);\r\n\t\r\n\t\t\tcase DomType.MmlEquationArray:\r\n\t\t\t\treturn this.renderMllList(elem);\r\n\r\n\t\t\tcase DomType.Inserted:\r\n\t\t\t\treturn this.renderInserted(elem);\r\n\r\n\t\t\tcase DomType.Deleted:\r\n\t\t\t\treturn this.renderDeleted(elem);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trenderChildren(elem: OpenXmlElement, into?: Element): Node[] {\r\n\t\treturn this.renderElements(elem.children, into);\r\n\t}\r\n\r\n\trenderElements(elems: OpenXmlElement[], into?: Element): Node[] {\r\n\t\tif (elems == null)\r\n\t\t\treturn null;\r\n\r\n\t\tvar result = elems.flatMap(e => this.renderElement(e)).filter(e => e != null);\r\n\r\n\t\tif (into)\r\n\t\t\tappendChildren(into, result);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\r\n\t\treturn this.createElement(tagName, props, this.renderChildren(elem));\r\n\t}\r\n\r\n\trenderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\r\n\t\treturn createElementNS(ns, tagName, props, this.renderChildren(elem));\r\n\t}\r\n\r\n\trenderParagraph(elem: WmlParagraph) {\r\n\t\tvar result = this.createElement(\"p\");\r\n\r\n\t\tconst style = this.findStyle(elem.styleName);\r\n\t\telem.tabs ??= style?.paragraphProps?.tabs;  //TODO\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\t\tthis.renderCommonProperties(result.style, elem);\r\n\r\n\t\tconst numbering = elem.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n\t\tif (numbering) {\r\n\t\t\tresult.classList.add(this.numberingClass(numbering.id, numbering.level));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderRunProperties(style: any, props: RunProperties) {\r\n\t\tthis.renderCommonProperties(style, props);\r\n\t}\r\n\r\n\trenderCommonProperties(style: any, props: CommonProperties) {\r\n\t\tif (props == null)\r\n\t\t\treturn;\r\n\r\n\t\tif (props.color) {\r\n\t\t\tstyle[\"color\"] = props.color;\r\n\t\t}\r\n\r\n\t\tif (props.fontSize) {\r\n\t\t\tstyle[\"font-size\"] = props.fontSize;\r\n\t\t}\r\n\t}\r\n\r\n\trenderHyperlink(elem: WmlHyperlink) {\r\n\t\tvar result = this.createElement(\"a\");\r\n\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tif (elem.href) {\r\n\t\t\tresult.href = elem.href;\r\n\t\t} else if(elem.id) {\r\n\t\t\tconst rel = this.document.documentPart.rels\r\n\t\t\t\t.find(it => it.id == elem.id && it.targetMode === \"External\");\r\n\t\t\tresult.href = rel?.target;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderDrawing(elem: OpenXmlElement) {\r\n\t\tvar result = this.createElement(\"div\");\r\n\r\n\t\tresult.style.display = \"inline-block\";\r\n\t\tresult.style.position = \"relative\";\r\n\t\tresult.style.textIndent = \"0px\";\r\n\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderImage(elem: IDomImage) {\r\n\t\tlet result = this.createElement(\"img\");\r\n\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tif (this.document) {\r\n\t\t\tthis.document.loadDocumentImage(elem.src, this.currentPart).then(x => {\r\n\t\t\t\tresult.src = x;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderText(elem: WmlText) {\r\n\t\treturn this.htmlDocument.createTextNode(elem.text);\r\n\t}\r\n\r\n\trenderDeletedText(elem: WmlText) {\r\n\t\treturn this.options.renderEndnotes ? this.htmlDocument.createTextNode(elem.text) : null;\r\n\t}\r\n\r\n\trenderBreak(elem: WmlBreak) {\r\n\t\tif (elem.break == \"textWrapping\") {\r\n\t\t\treturn this.createElement(\"br\");\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trenderInserted(elem: OpenXmlElement): Node | Node[] {\r\n\t\tif (this.options.renderChanges)\r\n\t\t\treturn this.renderContainer(elem, \"ins\");\r\n\r\n\t\treturn this.renderChildren(elem);\r\n\t}\r\n\r\n\trenderDeleted(elem: OpenXmlElement): Node {\r\n\t\tif (this.options.renderChanges)\r\n\t\t\treturn this.renderContainer(elem, \"del\");\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trenderSymbol(elem: WmlSymbol) {\r\n\t\tvar span = this.createElement(\"span\");\r\n\t\tspan.style.fontFamily = elem.font;\r\n\t\tspan.innerHTML = `&#x${elem.char};`\r\n\t\treturn span;\r\n\t}\r\n\r\n\trenderFootnoteReference(elem: WmlNoteReference) {\r\n\t\tvar result = this.createElement(\"sup\");\r\n\t\tthis.currentFootnoteIds.push(elem.id);\r\n\t\tresult.textContent = `${this.currentFootnoteIds.length}`;\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderEndnoteReference(elem: WmlNoteReference) {\r\n\t\tvar result = this.createElement(\"sup\");\r\n\t\tthis.currentEndnoteIds.push(elem.id);\r\n\t\tresult.textContent = `${this.currentEndnoteIds.length}`;\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderTab(elem: OpenXmlElement) {\r\n\t\tvar tabSpan = this.createElement(\"span\");\r\n\r\n\t\ttabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n\t\tif (this.options.experimental) {\r\n\t\t\ttabSpan.className = this.tabStopClass();\r\n\t\t\tvar stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\r\n\t\t\tthis.currentTabs.push({ stops, span: tabSpan });\r\n\t\t}\r\n\r\n\t\treturn tabSpan;\r\n\t}\r\n\r\n\trenderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n\t\tvar result = this.createElement(\"span\");\r\n\t\tresult.id = elem.name;\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderRun(elem: WmlRun) {\r\n\t\tif (elem.fieldRun)\r\n\t\t\treturn null;\r\n\r\n\t\tconst result = this.createElement(\"span\");\r\n\r\n\t\tif (elem.id)\r\n\t\t\tresult.id = elem.id;\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tif (elem.verticalAlign) {\r\n\t\t\tconst wrapper = this.createElement(elem.verticalAlign as any);\r\n\t\t\tthis.renderChildren(elem, wrapper);\r\n\t\t\tresult.appendChild(wrapper);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderChildren(elem, result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderTable(elem: WmlTable) {\r\n\t\tlet result = this.createElement(\"table\");\r\n\r\n\t\tthis.tableCellPositions.push(this.currentCellPosition);\r\n\t\tthis.tableVerticalMerges.push(this.currentVerticalMerge);\r\n\t\tthis.currentVerticalMerge = {};\r\n\t\tthis.currentCellPosition = { col: 0, row: 0 };\r\n\r\n\t\tif (elem.columns)\r\n\t\t\tresult.appendChild(this.renderTableColumns(elem.columns));\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tthis.currentVerticalMerge = this.tableVerticalMerges.pop();\r\n\t\tthis.currentCellPosition = this.tableCellPositions.pop();\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderTableColumns(columns: WmlTableColumn[]) {\r\n\t\tlet result = this.createElement(\"colgroup\");\r\n\r\n\t\tfor (let col of columns) {\r\n\t\t\tlet colElem = this.createElement(\"col\");\r\n\r\n\t\t\tif (col.width)\r\n\t\t\t\tcolElem.style.width = col.width;\r\n\r\n\t\t\tresult.appendChild(colElem);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderTableRow(elem: OpenXmlElement) {\r\n\t\tlet result = this.createElement(\"tr\");\r\n\r\n\t\tthis.currentCellPosition.col = 0;\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tthis.currentCellPosition.row++;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderTableCell(elem: WmlTableCell) {\r\n\t\tlet result = this.createElement(\"td\");\r\n\r\n\t\tconst key = this.currentCellPosition.col;\r\n\r\n\t\tif (elem.verticalMerge) {\r\n\t\t\tif (elem.verticalMerge == \"restart\") {\r\n\t\t\t\tthis.currentVerticalMerge[key] = result;\r\n\t\t\t\tresult.rowSpan = 1;\r\n\t\t\t} else if (this.currentVerticalMerge[key]) {\r\n\t\t\t\tthis.currentVerticalMerge[key].rowSpan += 1;\r\n\t\t\t\tresult.style.display = \"none\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.currentVerticalMerge[key] = null;\r\n\t\t}\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderChildren(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tif (elem.span)\r\n\t\t\tresult.colSpan = elem.span;\r\n\r\n\t\tthis.currentCellPosition.col += result.colSpan;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderVmlPicture(elem: OpenXmlElement) {\r\n\t\tvar result = createElement(\"div\");\r\n\t\tthis.renderChildren(elem, result);\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderVmlElement(elem: VmlElement): SVGElement {\r\n\t\tvar container = createSvgElement(\"svg\");\r\n\r\n\t\tcontainer.setAttribute(\"style\", elem.cssStyleText);\r\n\r\n\t\tconst result = this.renderVmlChildElement(elem);\r\n\r\n\t\tif (elem.imageHref?.id) {\r\n\t\t\tthis.document?.loadDocumentImage(elem.imageHref.id, this.currentPart)\r\n\t\t\t\t.then(x => result.setAttribute(\"href\", x));\r\n\t\t}\r\n\r\n\t\tcontainer.appendChild(result);\r\n\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tconst bb = (container.firstElementChild as any).getBBox();\r\n\r\n\t\t\tcontainer.setAttribute(\"width\", `${Math.ceil(bb.x +  bb.width)}`);\r\n\t\t\tcontainer.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\r\n\t\t});\r\n\r\n\t\treturn container;\r\n\t}\r\n\r\n\trenderVmlChildElement(elem: VmlElement): any {\r\n\t\tconst result = createSvgElement(elem.tagName as any);\r\n\t\tObject.entries(elem.attrs).forEach(([k, v]) => result.setAttribute(k, v));\r\n\r\n\t\tfor (let child of elem.children) {\r\n\t\t\tif (child.type == DomType.VmlElement) {\r\n\t\t\t\tresult.appendChild(this.renderVmlChildElement(child as VmlElement));\r\n\t\t\t} else {\r\n\t\t\t\tresult.appendChild(...asArray(this.renderElement(child as any)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderMmlRadical(elem: OpenXmlElement): HTMLElement {\r\n\t\tconst base = elem.children.find(el => el.type == DomType.MmlBase);\r\n\r\n\t\tif (elem.props?.hideDegree) {\r\n\t\t\treturn createElementNS(ns.mathML, \"msqrt\", null, this.renderElements([base]));\r\n\t\t}\r\n\r\n\t\tconst degree = elem.children.find(el => el.type == DomType.MmlDegree);\r\n\t\treturn createElementNS(ns.mathML, \"mroot\", null, this.renderElements([base, degree]));\r\n\t}\r\n\r\n\trenderMmlDelimiter(elem: OpenXmlElement): HTMLElement {\t\t\r\n\t\tconst children = [];\r\n\r\n\t\tchildren.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']));\r\n\t\tchildren.push(...this.renderElements(elem.children));\r\n\t\tchildren.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']));\r\n\r\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\r\n\t}\r\n\r\n\trenderMmlNary(elem: OpenXmlElement): HTMLElement {\t\t\r\n\t\tconst children = [];\r\n\t\tconst grouped = keyBy(elem.children, x => x.type);\r\n\r\n\t\tconst sup = grouped[DomType.MmlSuperArgument];\r\n\t\tconst sub = grouped[DomType.MmlSubArgument];\r\n\t\tconst supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\r\n\t\tconst subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\r\n\r\n\t\tconst charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props?.char ?? '\\u222B']);\r\n\r\n\t\tif (supElem || subElem) {\r\n\t\t\tchildren.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\r\n\t\t} else if(supElem) {\r\n\t\t\tchildren.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\r\n\t\t} else if(subElem) {\r\n\t\t\tchildren.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\r\n\t\t} else {\r\n\t\t\tchildren.push(charElem);\r\n\t\t}\r\n\r\n\t\tchildren.push(...this.renderElements(grouped[DomType.MmlBase].children));\r\n\r\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\r\n\t}\r\n\r\n\trenderMmlPreSubSuper(elem: OpenXmlElement) {\r\n\t\tconst children = [];\r\n\t\tconst grouped = keyBy(elem.children, x => x.type);\r\n\r\n\t\tconst sup = grouped[DomType.MmlSuperArgument];\r\n\t\tconst sub = grouped[DomType.MmlSubArgument];\r\n\t\tconst supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\r\n\t\tconst subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\r\n\t\tconst stubElem = createElementNS(ns.mathML, \"mo\", null);\r\n\r\n\t\tchildren.push(createElementNS(ns.mathML, \"msubsup\", null, [stubElem, subElem, supElem]));\r\n\t\tchildren.push(...this.renderElements(grouped[DomType.MmlBase].children));\r\n\r\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\r\n\t}\r\n\r\n\trenderMmlGroupChar(elem: OpenXmlElement) {\r\n\t\tconst tagName = elem.props.verticalJustification === \"bot\" ? \"mover\" : \"munder\";\r\n\t\tconst result = this.renderContainerNS(elem, ns.mathML, tagName);\r\n\r\n\t\tif (elem.props.char) {\r\n\t\t\tresult.appendChild(createElementNS(ns.mathML, \"mo\", null, [elem.props.char]));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderMmlBar(elem: OpenXmlElement) {\r\n\t\tconst result = this.renderContainerNS(elem, ns.mathML, \"mrow\");\r\n\r\n\t\tswitch(elem.props.position) {\r\n\t\t\tcase \"top\": result.style.textDecoration = \"overline\"; break\r\n\t\t\tcase \"bottom\": result.style.textDecoration = \"underline\"; break\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderMmlRun(elem: OpenXmlElement) {\r\n\t\tconst result = createElementNS(ns.mathML, \"ms\");\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\t\tthis.renderChildren(elem, result);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\trenderMllList(elem: OpenXmlElement) {\r\n\t\tconst result = createElementNS(ns.mathML, \"mtable\");\r\n\r\n\t\tthis.renderClass(elem, result);\r\n\t\tthis.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tconst childern = this.renderChildren(elem);\r\n\r\n\t\tfor (let child of this.renderChildren(elem)) {\r\n\t\t\tresult.appendChild(createElementNS(ns.mathML, \"mtr\", null, [\r\n\t\t\t\tcreateElementNS(ns.mathML, \"mtd\", null, [child])\r\n\t\t\t]));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\trenderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\r\n\t\tfor (let k in style) {\r\n\t\t\tif (k.startsWith(\"$\")) {\r\n\t\t\t\touput.setAttribute(k.slice(1), style[k]);\r\n\t\t\t} else {\r\n\t\t\t\touput.style[k] = style[k];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trenderClass(input: OpenXmlElement, ouput: HTMLElement) {\r\n\t\tif (input.className)\r\n\t\t\touput.className = input.className;\r\n\r\n\t\tif (input.styleName)\r\n\t\t\touput.classList.add(this.processStyleName(input.styleName));\r\n\t}\r\n\r\n\tfindStyle(styleName: string) {\r\n\t\treturn styleName && this.styleMap?.[styleName];\r\n\t}\r\n\r\n\tnumberingClass(id: string, lvl: number) {\r\n\t\treturn `${this.className}-num-${id}-${lvl}`;\r\n\t}\r\n\r\n\ttabStopClass() {\r\n\t\treturn `${this.className}-tab-stop`;\r\n\t}\r\n\r\n\tstyleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n\t\tlet result = `${selectors} {\\r\\n`;\r\n\r\n\t\tfor (const key in values) {\r\n\t\t\tif (key.startsWith('$'))\r\n\t\t\t\tcontinue;\r\n\t\t\t\r\n\t\t\tresult += `  ${key}: ${values[key]};\\r\\n`;\r\n\t\t}\r\n\r\n\t\tif (cssText)\r\n\t\t\tresult += cssText;\r\n\r\n\t\treturn result + \"}\\r\\n\";\r\n\t}\r\n\r\n\tnumberingCounter(id: string, lvl: number) {\r\n\t\treturn `${this.className}-num-${id}-${lvl}`;\r\n\t}\r\n\r\n\tlevelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n\t\tconst suffMap = {\r\n\t\t\t\"tab\": \"\\\\9\",\r\n\t\t\t\"space\": \"\\\\a0\",\r\n\t\t};\r\n\r\n\t\tvar result = text.replace(/%\\d*/g, s => {\r\n\t\t\tlet lvl = parseInt(s.substring(1), 10) - 1;\r\n\t\t\treturn `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n\t\t});\r\n\r\n\t\treturn `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n\t}\r\n\r\n\tnumFormatToCssValue(format: string) {\r\n\t\tvar mapping = {\r\n\t\t\tnone: \"none\",\r\n\t\t\tbullet: \"disc\",\r\n\t\t\tdecimal: \"decimal\",\r\n\t\t\tlowerLetter: \"lower-alpha\",\r\n\t\t\tupperLetter: \"upper-alpha\",\r\n\t\t\tlowerRoman: \"lower-roman\",\r\n\t\t\tupperRoman: \"upper-roman\",\r\n\t\t\tdecimalZero: \"decimal-leading-zero\", // 01,02,03,...\r\n\t\t\t// ordinal: \"\", // 1st, 2nd, 3rd,...\r\n\t\t\t// ordinalText: \"\", //First, Second, Third, ...\r\n\t\t\t// cardinalText: \"\", //One,Two Three,...\r\n\t\t\t// numberInDash: \"\", //-1-,-2-,-3-, ...\r\n\t\t\t// hex: \"upper-hexadecimal\",\r\n\t\t\taiueo: \"katakana\",\r\n\t\t\taiueoFullWidth: \"katakana\",\r\n\t\t\tchineseCounting: \"simp-chinese-informal\",\r\n\t\t\tchineseCountingThousand: \"simp-chinese-informal\",\r\n\t\t\tchineseLegalSimplified: \"simp-chinese-formal\", // 中文大写\r\n\t\t\tchosung: \"hangul-consonant\",\r\n\t\t\tideographDigital: \"cjk-ideographic\",\r\n\t\t\tideographTraditional: \"cjk-heavenly-stem\", // 十天干\r\n\t\t\tideographLegalTraditional: \"trad-chinese-formal\",\r\n\t\t\tideographZodiac: \"cjk-earthly-branch\", // 十二地支\r\n\t\t\tiroha: \"katakana-iroha\",\r\n\t\t\tirohaFullWidth: \"katakana-iroha\",\r\n\t\t\tjapaneseCounting: \"japanese-informal\",\r\n\t\t\tjapaneseDigitalTenThousand: \"cjk-decimal\",\r\n\t\t\tjapaneseLegal: \"japanese-formal\",\r\n\t\t\tthaiNumbers: \"thai\",\r\n\t\t\tkoreanCounting: \"korean-hangul-formal\",\r\n\t\t\tkoreanDigital: \"korean-hangul-formal\",\r\n\t\t\tkoreanDigital2: \"korean-hanja-informal\",\r\n\t\t\thebrew1: \"hebrew\",\r\n\t\t\thebrew2: \"hebrew\",\r\n\t\t\thindiNumbers: \"devanagari\",\r\n\t\t\tganada: \"hangul\",\r\n\t\t\ttaiwaneseCounting: \"cjk-ideographic\",\r\n\t\t\ttaiwaneseCountingThousand: \"cjk-ideographic\",\r\n\t\t\ttaiwaneseDigital:  \"cjk-decimal\",\r\n\t\t};\r\n\r\n\t\treturn mapping[format] ?? format;\r\n\t}\r\n\r\n\trefreshTabStops() {\r\n\t\tif (!this.options.experimental)\r\n\t\t\treturn;\r\n\r\n\t\tclearTimeout(this.tabsTimeout);\r\n\r\n\t\tthis.tabsTimeout = setTimeout(() => {\r\n\t\t\tconst pixelToPoint = computePixelToPoint();\r\n\r\n\t\t\tfor (let tab of this.currentTabs) {\r\n\t\t\t\tupdateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\r\n\t\t\t}\r\n\t\t}, 500);\r\n\t}\r\n\r\n\tcreateElement = createElement;\r\n}\r\n\r\ntype ChildType = Node | string;\r\n\r\nfunction createElement<T extends keyof HTMLElementTagNameMap>(\r\n\ttagName: T,\r\n\tprops?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>,\r\n\tchildren?: ChildType[]\r\n): HTMLElementTagNameMap[T] {\r\n\treturn createElementNS(undefined, tagName, props, children);\r\n}\r\n\r\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(\r\n\ttagName: T,\r\n\tprops?: Partial<Record<keyof SVGElementTagNameMap[T], any>>,\r\n\tchildren?: ChildType[]\r\n): SVGElementTagNameMap[T] {\r\n\treturn createElementNS(ns.svg, tagName, props, children);\r\n}\r\n\r\nfunction createElementNS(ns: string, tagName: string, props?: Partial<Record<any, any>>, children?: ChildType[]): any {\r\n\tvar result = ns ? document.createElementNS(ns, tagName) : document.createElement(tagName);\r\n\tObject.assign(result, props);\r\n\tchildren && appendChildren(result, children);\r\n\treturn result;\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n\telem.innerHTML = '';\r\n}\r\n\r\nfunction appendChildren(elem: Element, children: (Node | string)[]) {\r\n\tchildren.forEach(c => elem.appendChild(isString(c) ? document.createTextNode(c) : c));\r\n}\r\n\r\nfunction createStyleElement(cssText: string) {\r\n\treturn createElement(\"style\", { innerHTML: cssText });\r\n}\r\n\r\nfunction appendComment(elem: HTMLElement, comment: string) {\r\n\telem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\r\n\tvar parent = elem.parent;\r\n\r\n\twhile (parent != null && parent.type != type)\r\n\t\tparent = parent.parent;\r\n\r\n\treturn <T>parent;\r\n}\r\n", "import { Length } from \"./document/common\";\r\nimport { ParagraphTab } from \"./document/paragraph\";\r\n\r\ninterface TabStop {\r\n\tpos: number;\r\n\tleader: string;\r\n\tstyle: string;\r\n}\r\n\r\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\r\nconst maxTabs = 50;\r\n\r\nexport function computePixelToPoint(container: HTMLElement = document.body) {\r\n\tconst temp = document.createElement(\"div\");\r\n\ttemp.style.width = '100pt';\r\n\t\r\n\tcontainer.appendChild(temp);\r\n\tconst result = 100 / temp.offsetWidth;\r\n\tcontainer.removeChild(temp);\r\n\r\n\treturn result\r\n}\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\r\n    const p = elem.closest(\"p\");\r\n\r\n    const ebb = elem.getBoundingClientRect();\r\n    const pbb = p.getBoundingClientRect();\r\n    const pcs = getComputedStyle(p);\r\n\r\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\r\n\t\tpos: lengthToPoint(t.position),\r\n\t\tleader: t.leader,\r\n\t\tstyle: t.style\r\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\r\n\r\n\tconst lastTab = tabStops[tabStops.length - 1];\r\n\tconst pWidthPt = pbb.width * pixelToPoint;\r\n\tconst size = lengthToPoint(defaultTabSize);\r\n    let pos = lastTab.pos + size;\r\n\r\n    if (pos < pWidthPt) {\r\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\r\n            tabStops.push({ ...defaultTab, pos: pos });\r\n        }\r\n    }\r\n\r\n    const marginLeft = parseFloat(pcs.marginLeft);\r\n    const pOffset = pbb.left + marginLeft;\r\n    const left = (ebb.left - pOffset) * pixelToPoint;\r\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    let width: number = 1;\r\n\r\n    if (tab.style == \"right\" || tab.style == \"center\") {\r\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\r\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\r\n        const range = document.createRange();\r\n        range.setStart(elem, 1);\r\n\r\n\t\tif (nextIdx < tabStops.length) {\r\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\r\n\t\t} else {\r\n\t\t\trange.setEndAfter(p);\r\n\t\t}\r\n\r\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\r\n        const nextBB = range.getBoundingClientRect();\r\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\r\n\r\n\t\twidth = tab.pos - offset * pixelToPoint;\r\n    } else {\r\n        width = tab.pos - left;\r\n    }\r\n\r\n    elem.innerHTML = \"&nbsp;\";\r\n    elem.style.textDecoration = \"inherit\";\r\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.textDecoration = \"underline\";\r\n            elem.style.textDecorationStyle = \"dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.textDecoration = \"underline\";\r\n            break;\r\n    }\r\n}\r\n\r\nfunction lengthToPoint(length: Length): number {\r\n\treturn parseFloat(length);\r\n}", "import { OpenXmlElementBase, DomType } from \"../document/dom\";\r\n\r\nexport abstract class WmlBaseNote implements OpenXmlElementBase {\r\n    type: DomType;\r\n    id: string;\r\n\tnoteType: string;\r\n}\r\n\r\nexport class WmlFootnote extends WmlBaseNote {\r\n\ttype = DomType.Footnote\r\n}\r\n\r\nexport class WmlEndnote extends WmlBaseNote {\r\n\ttype = DomType.Endnote\r\n}", "import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\r\n\r\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\r\n    protected _documentParser: DocumentParser;\r\n\r\n    notes: T[]\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n}\r\n\r\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\r\n    }\r\n}\r\n\r\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\r\n    }\r\n}", "import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}", "import { NumberingPicBullet } from \"../document/dom\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphStyle: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pStyle\":\r\n                result.paragraphStyle = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}", "import { Length,  LengthUsage, LengthUsageType, convertLength, convertBoolean  } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n        \r\n    xmlString = removeUTF8BOM(xmlString);\r\n    \r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");  \r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nfunction removeUTF8BOM(data: string) {\r\n    return data.charCodeAt(0) === 0xFEFF ? data.substring(1) : data;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport class XmlParser {\r\n    elements(elem: Element, localName: string = null): Element[] {\r\n        const result = [];\r\n\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\r\n                result.push(c);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\r\n        var el = this.element(elem, localName);\r\n        return el ? this.attr(el, attrLocalName) : undefined;\r\n    }\r\n\r\n\tattrs(elem: Element) {\r\n\t\treturn Array.from(elem.attributes);\r\n\t}\r\n\r\n    attr(elem: Element, localName: string): string {\r\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n            let a = elem.attributes.item(i);\r\n\r\n            if (a.localName == localName)\r\n                return a.value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n\thexAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val, 16) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;", "import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { WmlSettings, parseSettings } from \"./settings\";\r\n\r\nexport class SettingsPart extends Part {\r\n\tsettings: WmlSettings;\r\n\r\n\tconstructor(pkg: OpenXmlPackage, path: string) {\r\n\t\tsuper(pkg, path);\r\n\t}\r\n\r\n\tparseXml(root: Element) {\r\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\r\n\t}\r\n}", "import { DocumentParser } from \"../document-parser\";\r\nimport { Length } from \"../document/common\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface WmlSettings {\r\n\tdefaultTabStop: Length;\r\n\tfootnoteProps: NoteProperties;\r\n\tendnoteProps: NoteProperties;\r\n\tautoHyphenation: boolean;\r\n}\r\n\r\nexport interface NoteProperties {\r\n\tnummeringFormat: string;\r\n\tdefaultNoteIds: string[];\r\n}\r\n\r\nexport function parseSettings(elem: Element, xml: XmlParser) {\r\n\tvar result = {} as WmlSettings; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\r\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\r\n\tvar result = {\r\n\t\tdefaultNoteIds: []\r\n\t} as NoteProperties; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"numFmt\": \r\n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"footnote\": \r\n\t\t\tcase \"endnote\": \r\n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}", "import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\n\r\nexport class StylesPart extends Part {\r\n    styles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.styles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}", "import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DmlTheme, parseTheme } from \"./theme\";\r\n\r\nexport class ThemePart extends Part {\r\n    theme: DmlTheme;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string) {\r\n        super(pkg, path);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.theme = parseTheme(root, this._package.xmlParser);\r\n    }\r\n}", "import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport class DmlTheme {\r\n    colorScheme: DmlColorScheme;\r\n    fontScheme: DmlFontScheme;\r\n}\r\n\r\nexport interface DmlColorScheme {\r\n    name: string;\r\n    colors: Record<string, string>;\r\n}\r\n\r\nexport interface DmlFontScheme {\r\n    name: string;\r\n    majorFont: DmlFormInfo,\r\n    minorFont: DmlFormInfo\r\n}\r\n\r\nexport interface DmlFormInfo {\r\n    latinTypeface: string;\r\n    eaTypeface: string;\r\n    csTypeface: string;\r\n}\r\n\r\nexport function parseTheme(elem: Element, xml: XmlParser) {\r\n    var result = new DmlTheme();\r\n    var themeElements = xml.element(elem, \"themeElements\");\r\n\r\n    for (let el of xml.elements(themeElements)) {\r\n        switch(el.localName) {\r\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\r\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlColorScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n        colors: {}\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        var srgbClr = xml.element(el, \"srgbClr\");\r\n        var sysClr = xml.element(el, \"sysClr\");\r\n\r\n        if (srgbClr) {\r\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\r\n        }\r\n        else if (sysClr) {\r\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlFontScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n    } as DmlFontScheme;\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\r\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\r\n    return {\r\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\r\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\r\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\r\n    };\r\n}", "export function escapeClassName(className: string) {\r\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function resolvePath(path: string, base: string): string {\r\n    try {\r\n        const prefix = \"http://docx/\";\r\n        const url = new URL(path, prefix + base).toString();\r\n        return url.substring(prefix.length);\r\n    } catch {\r\n        return `${base}${path}`;\r\n    }\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function blobToBase64(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = () => resolve(reader.result as string);\r\n\t\treader.onerror = () => reject();\r\n\t\treader.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\nexport function isString(item: unknown): item is string {\r\n    return typeof item === 'string' || item instanceof String;\r\n}\r\n\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}\r\n\r\nexport function parseCssRules(text: string): Record<string, string> {\r\n\tconst result: Record<string, string> = {};\r\n\r\n\tfor (const rule of text.split(';')) {\r\n\t\tconst [key, val] = rule.split(':');\r\n\t\tresult[key] = val;\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nexport function formatCssRules(style: Record<string, string>): string {\r\n\treturn Object.entries(style).map((k, v) => `${k}: ${v}`).join(';');\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n\treturn Array.isArray(val) ? val : [val];\r\n}", "import { DocumentParser } from '../document-parser';\r\nimport { convertLength, LengthUsage } from '../document/common';\r\nimport { OpenXmlElementBase, DomType } from '../document/dom';\r\nimport xml from '../parser/xml-parser';\r\nimport { formatCssRules, parseCssRules } from '../utils';\r\n\r\nexport class VmlElement extends OpenXmlElementBase {\r\n\ttype: DomType = DomType.VmlElement;\r\n\ttagName: string;\r\n\tcssStyleText?: string;\r\n\tattrs: Record<string, string> = {};\r\n\twrapType?: string;\r\n\timageHref?: {\r\n\t\tid: string,\r\n\t\ttitle: string\r\n\t}\r\n}\r\n\r\nexport function parseVmlElement(elem: Element, parser: DocumentParser): VmlElement {\r\n\tvar result = new VmlElement();\r\n\r\n\tswitch (elem.localName) {\r\n\t\tcase \"rect\":\r\n\t\t\tresult.tagName = \"rect\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"oval\":\r\n\t\t\tresult.tagName = \"ellipse\"; \r\n\t\t\tObject.assign(result.attrs, { cx: \"50%\", cy: \"50%\", rx: \"50%\", ry: \"50%\" });\r\n\t\t\tbreak;\r\n\t\r\n\t\tcase \"line\":\r\n\t\t\tresult.tagName = \"line\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"shape\":\r\n\t\t\tresult.tagName = \"g\"; \r\n\t\t\tbreak;\r\n\r\n\t\tcase \"textbox\":\r\n\t\t\tresult.tagName = \"foreignObject\"; \r\n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\tbreak;\r\n\t\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\tfor (const at of xml.attrs(elem)) {\r\n\t\tswitch(at.localName) {\r\n\t\t\tcase \"style\": \r\n\t\t\t\tresult.cssStyleText = at.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fillcolor\": \r\n\t\t\t\tresult.attrs.fill = at.value; \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"from\":\r\n\t\t\t\tconst [x1, y1] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x1, y1 });\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"to\":\r\n\t\t\t\tconst [x2, y2] = parsePoint(at.value);\r\n\t\t\t\tObject.assign(result.attrs, { x2, y2 });\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (const el of xml.elements(elem)) {\r\n\t\tswitch (el.localName) {\r\n\t\t\tcase \"stroke\": \r\n\t\t\t\tObject.assign(result.attrs, parseStroke(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"fill\": \r\n\t\t\t\tObject.assign(result.attrs, parseFill(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"imagedata\":\r\n\t\t\t\tresult.tagName = \"image\";\r\n\t\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\r\n\t\t\t\tresult.imageHref = {\r\n\t\t\t\t\tid: xml.attr(el, \"id\"),\r\n\t\t\t\t\ttitle: xml.attr(el, \"title\"),\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"txbxContent\": \r\n\t\t\t\tresult.children.push(...parser.parseBodyElements(el));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconst child = parseVmlElement(el, parser);\r\n\t\t\t\tchild && result.children.push(child);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction parseStroke(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t'stroke': xml.attr(el, \"color\"),\r\n\t\t'stroke-width': xml.lengthAttr(el, \"weight\", LengthUsage.Emu) ?? '1px'\r\n\t};\r\n}\r\n\r\nfunction parseFill(el: Element): Record<string, string> {\r\n\treturn {\r\n\t\t//'fill': xml.attr(el, \"color2\")\r\n\t};\r\n}\r\n\r\nfunction parsePoint(val: string): string[] {\r\n\treturn val.split(\",\");\r\n}\r\n\r\nfunction convertPath(path: string): string {\r\n\treturn path.replace(/([mlxe])|([-\\d]+)|([,])/g, (m) => {\r\n\t\tif (/[-\\d]/.test(m)) return convertLength(m,  LengthUsage.VmlEmu);\r\n\t\tif (/[ml,]/.test(m)) return m;\r\n\r\n\t\treturn '';\r\n\t});\r\n}", "import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { blobToBase64, resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\r\nimport { SettingsPart } from \"./settings/settings-part\";\r\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\r\n\r\nconst topLevelRels = [\r\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\r\n];\r\n\r\nexport class WordDocument {\r\n\tprivate _package: OpenXmlPackage;\r\n\tprivate _parser: DocumentParser;\r\n\tprivate _options: any;\r\n\r\n\trels: Relationship[];\r\n\tparts: Part[] = [];\r\n\tpartsMap: Record<string, Part> = {};\r\n\r\n\tdocumentPart: DocumentPart;\r\n\tfontTablePart: FontTablePart;\r\n\tnumberingPart: NumberingPart;\r\n\tstylesPart: StylesPart;\r\n\tfootnotesPart: FootnotesPart;\r\n\tendnotesPart: EndnotesPart;\r\n\tthemePart: ThemePart;\r\n\tcorePropsPart: CorePropsPart;\r\n\textendedPropsPart: ExtendedPropsPart;\r\n\tsettingsPart: SettingsPart;\r\n\r\n\tstatic async load(blob: Blob | any, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n\t\tvar d = new WordDocument();\r\n\r\n\t\td._options = options;\r\n\t\td._parser = parser;\r\n\t\td._package = await OpenXmlPackage.load(blob, options);\r\n\t\td.rels = await d._package.loadRelationships();\r\n\r\n\t\tawait Promise.all(topLevelRels.map(rel => {\r\n\t\t\tconst r = d.rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n\t\t\treturn d.loadRelationshipPart(r.target, r.type);\r\n\t\t}));\r\n\r\n\t\treturn d;\r\n\t}\r\n\r\n\tsave(type = \"blob\"): Promise<any> {\r\n\t\treturn this._package.save(type);\r\n\t}\r\n\r\n\tprivate async loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n\t\tif (this.partsMap[path])\r\n\t\t\treturn this.partsMap[path];\r\n\r\n\t\tif (!this._package.get(path))\r\n\t\t\treturn null;\r\n\r\n\t\tlet part: Part = null;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase RelationshipTypes.OfficeDocument:\r\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.FontTable:\r\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Numbering:\r\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Styles:\r\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Theme:\r\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footnotes:\r\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Endnotes:\r\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footer:\r\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Header:\r\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CoreProperties:\r\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.ExtendedProperties:\r\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CustomProperties:\r\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase RelationshipTypes.Settings:\r\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (part == null)\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tthis.partsMap[path] = part;\r\n\t\tthis.parts.push(part);\r\n\r\n\t\tawait part.load();\r\n\r\n\t\tif (part.rels?.length > 0) {\r\n\t\t\tconst [folder] = splitPath(part.path);\r\n\t\t\tawait Promise.all(part.rels.map(rel => this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)));\r\n\t\t}\r\n\r\n\t\treturn part;\r\n\t}\r\n\r\n\tasync loadDocumentImage(id: string, part?: Part): Promise<string> {\r\n\t\tconst x = await this.loadResource(part ?? this.documentPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadNumberingImage(id: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.numberingPart, id, \"blob\");\r\n\t\treturn this.blobToURL(x);\r\n\t}\r\n\r\n\tasync loadFont(id: string, key: string): Promise<string> {\r\n\t\tconst x = await this.loadResource(this.fontTablePart, id, \"uint8array\");\r\n\t\treturn x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x;\r\n\t}\r\n\r\n\tprivate blobToURL(blob: Blob): string | Promise<string> {\r\n\t\tif (!blob)\r\n\t\t\treturn null;\r\n\r\n\t\tif (this._options.useBase64URL) {\r\n\t\t\treturn blobToBase64(blob);\r\n\t\t}\r\n\r\n\t\treturn URL.createObjectURL(blob);\r\n\t}\r\n\r\n\tfindPartByRelId(id: string, basePart: Part = null) {\r\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\r\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\r\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\r\n\t}\r\n\r\n\tgetPathById(part: Part, id: string): string {\r\n\t\tconst rel = part.rels.find(x => x.id == id);\r\n\t\tconst [folder] = splitPath(part.path);\r\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\r\n\t}\r\n\r\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\r\n\t\tconst path = this.getPathById(part, id);\r\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n\t}\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n\tconst len = 16;\r\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n\tconst numbers = new Array(len);\r\n\r\n\tfor (let i = 0; i < len; i++)\r\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n\tfor (let i = 0; i < 32; i++)\r\n\t\tdata[i] = data[i] ^ numbers[i % len]\r\n\r\n\treturn data;\r\n}", "module.exports = __WEBPACK_EXTERNAL_MODULE__626__;", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n", "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t345: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function", "// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "require", "define", "amd", "globalThis", "__WEBPACK_EXTERNAL_MODULE__626__", "___CSS_LOADER_URL_IMPORT_0___", "URL", "r", "___CSS_LOADER_EXPORT___", "___CSS_LOADER_URL_REPLACEMENT_0___", "push", "id", "toString", "cssWithMappingToString", "list", "this", "map", "item", "content", "needLayer", "concat", "length", "join", "i", "modules", "media", "dedupe", "supports", "layer", "undefined", "alreadyImportedModules", "k", "_k", "e", "url", "options", "String", "__esModule", "default", "test", "slice", "hash", "needQuotes", "replace", "cssMapping", "btoa", "base64", "unescape", "encodeURIComponent", "JSON", "stringify", "data", "sourceMapping", "t", "a", "OpenXmlPackage", "_zip", "xmlParser", "XmlParser", "path", "files", "startsWith", "substr", "file", "input", "zip", "JSZip", "loadAsync", "type", "generateAsync", "get", "async", "Promise", "resolve", "relsPath", "f", "fn", "splitPath", "txt", "load", "parseRelationships", "parseXmlDocument", "firstElementChild", "parseXmlString", "trimXmlDeclaration", "_package", "rels", "loadRelationships", "xmlText", "xmlDoc", "keepOrigin", "_xmlDocument", "parseXml", "save", "update", "serializeXmlString", "RelationshipTypes", "xml", "elements", "attr", "target", "targetMode", "autos", "shd", "color", "borderColor", "highlight", "supportedNamespaceURIs", "mmlTagMap", "DomType", "MmlMath", "MmlMathParagraph", "MmlFraction", "MmlFunction", "MmlFunctionName", "MmlNumerator", "MmlDenominator", "MmlRadical", "MmlDegree", "MmlBase", "MmlSuperscript", "MmlSubscript", "MmlPreSubSuper", "MmlSuperArgument", "MmlSubArgument", "MmlDelimiter", "MmlNary", "MmlEquationArray", "MmlLimit", "MmlLimitLower", "MmlMatrix", "MmlMatrixRow", "MmlBox", "MmlBar", "MmlGroupChar", "ignoreWidth", "debug", "elemName", "elemClass", "result", "el", "node", "noteType", "children", "parseBodyElements", "xbody", "element", "background", "sectPr", "Document", "props", "parseSectionProperties", "cssStyle", "parseBackground", "elem", "xmlUtil", "colorAttr", "localName", "parseParagraph", "parseTable", "parseSdt", "xstyles", "foreach", "n", "parseStyle", "parseDefaultStyles", "name", "basedOn", "styles", "c", "rPr", "values", "parseDefaultProperties", "pPr", "isDefault", "boolAttr", "linked", "next", "aliases", "split", "paragraphProps", "parseParagraphProperties", "runProps", "parseRunProperties", "s", "parseTableStyle", "console", "warn", "selector", "modificator", "mod", "xnums", "mapping", "bullets", "parseAbstractNumbering", "forEach", "x", "parseNumberingPicBullet", "numId", "abstractNumId", "elementAttr", "pict", "shape", "imagedata", "intAttr", "src", "style", "parseNumberingLevel", "level", "start", "pStyleName", "pStyle", "rStyle", "suff", "bullet", "find", "levelText", "format", "parser", "sdtContent", "parentParser", "Inserted", "Deleted", "Paragraph", "parseRun", "parseHyperlink", "parseBookmarkStart", "parseBookmarkEnd", "parseMathElement", "parseInserted", "parseDeleted", "paragraph", "parseParagraphProperty", "styleName", "className", "classNameOfCnfStyle", "parseFrame", "parent", "Hyperlink", "anchor", "relId", "href", "Run", "checkAlternateContent", "Text", "text", "textContent", "DeletedText", "SimpleField", "instruction", "lock", "dirty", "fieldRun", "Instruction", "ComplexField", "charType", "NoBreakHyphen", "Break", "break", "Symbol", "font", "char", "Tab", "FootnoteReference", "EndnoteReference", "d", "parseDrawing", "parseVmlPicture", "propsTag", "run", "MmlRun", "parseMathProperies", "verticalJustification", "position", "hideDegree", "beginChar", "endChar", "verticalAlign", "valueOfVertAlign", "VmlPicture", "child", "parseVmlElement", "choice", "requires", "namespaceURI", "lookupNamespaceURI", "includes", "parseDrawingWrapper", "Drawing", "isAnchor", "wrapType", "simplePos", "posX", "relative", "align", "offset", "posY", "lengthAttr", "LengthUsage", "Emu", "pos", "alignNode", "offsetNode", "sizeValue", "g", "parseGraphic", "graphicData", "parsePicture", "Image", "blipFill", "blip", "spPr", "xfrm", "Table", "parseTableRow", "columns", "parseTableColumns", "parseTableProperties", "width", "table", "cellStyle", "classNameOftblLook", "parseTablePosition", "colBandSize", "rowBandSize", "topFromText", "bottomFromText", "rightFromText", "leftFromText", "addSize", "Row", "parseTableCell", "parseTableRowProperties", "row", "isHeader", "Cell", "parseTableCellProperties", "cell", "span", "verticalMerge", "childStyle", "handler", "valueOfJc", "valueOfTextAlignment", "FontSize", "valueOfSize", "parseTrHeight", "parseUnderline", "parseIndentation", "parseFont", "parseBorderProperties", "valueOfMargin", "valueOfBorder", "parseMarginProperties", "valueOfTblLayout", "parseSpacing", "val", "col", "fonts", "themeValue", "filter", "firstLine", "hanging", "left", "right", "end", "before", "after", "line", "lineRule", "toFixed", "output", "knownColors", "cb", "childNodes", "nodeType", "Node", "ELEMENT_NODE", "attrName", "defValue", "autoColor", "v", "themeColor", "Dxa", "convertLength", "Percent", "Border", "_", "asTagName", "b", "hexAttr", "trim", "CorePropsPart", "Part", "parseCoreProps", "title", "description", "subject", "creator", "keywords", "language", "lastModifiedBy", "revision", "parseInt", "CustomPropsPart", "parseCustomProps", "firstChild", "formatId", "nodeName", "value", "ExtendedPropsPart", "parseExtendedProps", "safeParseToInt", "template", "pages", "words", "characters", "application", "lines", "paragraphs", "company", "appVersion", "BookmarkStart", "colFirst", "colLast", "BookmarkEnd", "parseBorder", "size", "Point", "frame", "shadow", "top", "bottom", "ns", "wordml", "drawingml", "picture", "compatibility", "math", "mul", "unit", "LineHeight", "VmlEmu", "usage", "defaultValue", "fontSize", "DocumentPart", "pkg", "super", "_documentParser", "body", "parseDocumentFile", "parseCommonProperty", "tabs", "parseTabs", "sectionProps", "numbering", "parseNumbering", "lineSpacing", "parseLineSpacing", "textAlignment", "keepLines", "keepNext", "pageBreakBefore", "outlineLevel", "leader", "parseRunProperty", "SectionType", "parseColumns", "numberOfColumns", "space", "separator", "equalWidth", "parsePageNumber", "chapSep", "chapStyle", "parseFooterHeaderReference", "section", "pageSize", "height", "orientation", "pageMargins", "header", "footer", "gutter", "headerRefs", "footerRefs", "titlePage", "pageBorders", "parseBorders", "pageNumber", "defaultOptions", "ignoreHeight", "ignoreFonts", "breakPages", "experimental", "inWrapper", "ignoreLastRenderedPageBreak", "renderHeaders", "renderFooters", "renderFootnotes", "renderEndnotes", "useBase64URL", "useMathMLPolyfill", "renderChanges", "userOptions", "ops", "WordDocument", "DocumentParser", "bodyContainer", "styleContainer", "renderer", "HtmlRenderer", "window", "document", "doc", "render", "FontTablePart", "parseFonts", "embedFontTypeMap", "embedRegular", "embedBold", "embedItalic", "embedBoldItalic", "embedFontRefs", "family", "altName", "parseEmbedFontRef", "key", "WmlHeader", "OpenXmlElementBase", "Header", "WmlFooter", "Footer", "BaseHeaderFooterPart", "rootElement", "createRootElement", "createElement", "tagName", "createElementNS", "createSvgElement", "Object", "assign", "appendChildren", "removeAllElements", "innerHTML", "appendChild", "isString", "createTextNode", "createStyleElement", "cssText", "appendComment", "comment", "createComment", "htmlDocument", "styleMap", "currentPart", "tableVerticalMerges", "currentVerticalMerge", "tableCellPositions", "currentCellPosition", "footnoteMap", "endnoteMap", "currentEndnoteIds", "usedHederFooterParts", "currentTabs", "tabsTimeout", "rootSelector", "renderDefaultStyle", "MathMLElement", "themePart", "renderTheme", "stylesPart", "processStyles", "renderStyles", "numberingPart", "prodessNumberings", "domNumberings", "renderNumbering", "footnotesPart", "keyBy", "notes", "endnotesPart", "settingsPart", "defaultTabSize", "settings", "defaultTabStop", "fontTablePart", "renderFontTable", "sectionElements", "renderSections", "documentPart", "renderWrapper", "refreshTabStops", "variables", "fontScheme", "theme", "majorFont", "latinTypeface", "minorFont", "colorScheme", "entries", "colors", "styleToString", "fontsPart", "ref", "loadFont", "then", "fontData", "cssValues", "escapeClassName", "stylesMap", "baseStyle", "mergeDeep", "baseValues", "styleValues", "copyStyleProperties", "cssName", "processStyleName", "numberings", "num", "findStyle", "processTable", "processElement", "attrs", "getOwnPropertyNames", "hasOwnProperty", "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "minHeight", "columnCount", "columnGap", "columnRule", "sections", "splitBySection", "prevProps", "l", "currentFootnoteIds", "sectProps", "sectionElement", "createSection", "renderStyleValues", "renderHeaderFooter", "contentElement", "renderElements", "renderNotes", "refs", "page", "firstOfSection", "into", "part", "findPartByRelId", "current", "p", "pBreakIndex", "rBreakIndex", "findIndex", "isPageBreakElement", "bind", "breakRun", "splitRun", "newParagraph", "runChildren", "newRun", "currentSectProps", "styleText", "resetCounters", "numberingClass", "listStyleType", "valiable", "toLowerCase", "loadNumberingImage", "counter", "numberingCounter", "counterReset", "levelTextToContent", "numFormatToCssValue", "defautStyles", "subStyles", "linkedStyle", "subStyle", "noteIds", "notesMap", "renderParagraph", "renderBookmarkStart", "renderRun", "renderTable", "renderTableRow", "renderTableCell", "renderHyperlink", "renderDrawing", "renderImage", "renderText", "renderDeletedText", "renderTab", "renderSymbol", "renderBreak", "renderContainer", "Footnote", "Endnote", "renderFootnoteReference", "renderEndnoteReference", "renderVmlPicture", "VmlElement", "renderVmlElement", "renderContainerNS", "xmlns", "renderMmlGroupChar", "renderMmlRadical", "renderMmlDelimiter", "renderMmlRun", "renderMmlNary", "renderMmlPreSubSuper", "renderMmlBar", "renderMllList", "renderInserted", "renderDeleted", "elems", "flatMap", "renderElement", "renderChildren", "renderClass", "renderCommonProperties", "classList", "add", "rel", "it", "display", "textIndent", "loadDocumentImage", "fontFamily", "tabSpan", "tabStopClass", "stops", "wrapper", "renderTableColumns", "pop", "colElem", "rowSpan", "colSpan", "container", "setAttribute", "cssStyleText", "renderVmlChildElement", "imageHref", "requestAnimationFrame", "bb", "getBBox", "Math", "ceil", "y", "asArray", "base", "degree", "grouped", "sup", "sub", "supElem", "subElem", "charElem", "stubElem", "textDecoration", "ouput", "lvl", "selectors", "numformat", "substring", "none", "decimal", "lowerLetter", "upperLetter", "lowerRoman", "upperRoman", "decimalZero", "aiueo", "aiueoFullWidth", "chineseCounting", "chineseCountingThousand", "chineseLegalSimplified", "chosung", "ideographDigital", "ideographTraditional", "ideographLegalTraditional", "ideographZodiac", "iroha", "irohaFullWidth", "japaneseCounting", "japaneseDigitalTenThousand", "japaneseLegal", "thaiNumbers", "koreanCounting", "koreanDigital", "koreanDigital2", "hebrew1", "hebrew2", "hindiNumbers", "ganada", "taiwaneseCounting", "taiwaneseCountingThousand", "taiwaneseDigital", "clearTimeout", "setTimeout", "pixelToPoint", "computePixelToPoint", "tab", "updateTabStop", "defaultTab", "lengthToPoint", "parseFloat", "temp", "offsetWidth", "removeChild", "closest", "ebb", "getBoundingClientRect", "pbb", "pcs", "getComputedStyle", "tabStops", "sort", "lastTab", "pWidthPt", "marginLeft", "pOffset", "Array", "from", "querySelectorAll", "nextIdx", "indexOf", "range", "createRange", "setStart", "setEndBefore", "setEndAfter", "nextBB", "wordSpacing", "textDecorationStyle", "WmlBaseNote", "BaseNotePart", "parseNotes", "WmlFootnote", "WmlEndnote", "NumberingPart", "parseNumberingPart", "parseNumberingFile", "overrides", "abstractId", "parseNumberingLevelOverrride", "levels", "multiLevelType", "numberingStyleLink", "styleLink", "restart", "justification", "bulletPictureId", "paragraphStyle", "numberingLevel", "parseNumberingBulletPicture", "referenceId", "abstractNumberings", "bulletPictures", "xmlString", "charCodeAt", "DOMParser", "parseFromString", "errorText", "getElementsByTagName", "Error", "XMLSerializer", "serializeToString", "attrLocalName", "attributes", "convertBoolean", "globalXmlParser", "SettingsPart", "parseSettings", "parseNoteProperties", "defaultNoteIds", "nummeringFormat", "footnoteProps", "endnoteProps", "autoHyphenation", "StylesPart", "parseStylesFile", "ThemePart", "parseTheme", "DmlTheme", "parseColorScheme", "srgbClr", "sysClr", "parseFontScheme", "parseFontInfo", "eaTypeface", "csTypeface", "themeElements", "isObject", "isArray", "si", "lastIndexOf", "prefix", "array", "by", "reduce", "blob", "reject", "reader", "FileReader", "onloadend", "onerror", "readAsDataURL", "sources", "source", "shift", "rule", "parseStroke", "parsePoint", "cx", "cy", "rx", "ry", "at", "fill", "x1", "y1", "x2", "y2", "topLevelRels", "OfficeDocument", "ExtendedProperties", "CoreProperties", "CustomProperties", "parts", "partsMap", "_options", "_parser", "all", "loadRelationshipPart", "FontTable", "Numbering", "Styles", "Theme", "Footnotes", "FootnotesPart", "Endnotes", "EndnotesPart", "FooterPart", "HeaderPart", "corePropsPart", "extendedPropsPart", "Settings", "folder", "resolvePath", "loadResource", "blobToURL", "Blob", "deobfuscate", "blobToBase64", "createObjectURL", "basePart", "outputType", "getPathById", "guidKey", "trimmed", "numbers", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "m", "getter", "definition", "o", "defineProperty", "enumerable", "obj", "prop", "prototype", "call", "toStringTag", "baseURI", "self", "location"]
}
