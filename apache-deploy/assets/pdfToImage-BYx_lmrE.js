import{g as v}from"./pdfjs-CwH_0J_o.js";import{r as z}from"./jszip.min-DgYJjwpR.js";import"./FileSaver.min-BjtJenfE.js";import{l as $}from"./pdfHelper-DbM3en0t.js";var x=z();const y=v(x),E=async(i,e=()=>{})=>{try{e("পিডিএফ ফাইল প্রস্তুত করা হচ্ছে...");const o=await i.arrayBuffer();e("পিডিএফ ডকুমেন্ট লোড করা হচ্ছে...");const s=await $(o),a=s.numPages;e(`পিডিএফ লোড হয়েছে। মোট পৃষ্ঠা: ${a}`);const c=new y,m=[];for(let t=1;t<=a;t++){e(`পৃষ্ঠা ${t}/${a} প্রক্রিয়াকরণ করা হচ্ছে...`);const g=await s.getPage(t),n=g.getViewport({scale:2}),r=document.createElement("canvas"),u=r.getContext("2d");r.height=n.height,r.width=n.width;const h={canvasContext:u,viewport:n};await g.render(h).promise;const w=await new Promise(b=>{r.toBlob(b,"image/png",1)}),d=`page-${t.toString().padStart(3,"0")}.png`;c.file(d,w),m.push({pageNum:t,fileName:d,blob:w})}e("জিপ ফাইল তৈরি করা হচ্ছে...");const p=await c.generateAsync({type:"blob"}),f=`${i.name.replace(".pdf","")}-images.zip`;e(`সম্পন্ন! ${a}টি ছবি তৈরি হয়েছে।`);const l=URL.createObjectURL(p);return{success:!0,message:`সফলভাবে ${a}টি ছবি তৈরি হয়েছে এবং ডাউনলোড শুরু হয়েছে।`,images:m,filename:f,downloadUrl:l,zipBlob:p,zipUrl:l}}catch(o){throw console.error("PDF to Image conversion error:",o),new Error(`পিডিএফ রূপান্তরে সমস্যা হয়েছে: ${o.message}`)}};export{E as convertPdfToImages};
